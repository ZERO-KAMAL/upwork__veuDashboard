{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\components\\toasts\\ToastsLinks.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\components\\toasts\\ToastsLinks.vue","mtime":1653043181156},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js","mtime":1653043263838},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js","mtime":1653043264822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQkNhcmRDb2RlIGZyb20gJ0Bjb3JlL2NvbXBvbmVudHMvYi1jYXJkLWNvZGUnDQppbXBvcnQgeyBCQnV0dG9uLCBCQ2FyZFRleHQgfSBmcm9tICdib290c3RyYXAtdnVlJw0KaW1wb3J0IFJpcHBsZSBmcm9tICd2dWUtcmlwcGxlLWRpcmVjdGl2ZScNCmltcG9ydCB7IGNvZGVMaW5rcyB9IGZyb20gJy4vY29kZScNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBjb21wb25lbnRzOiB7DQogICAgQkNhcmRDb2RlLA0KICAgIEJCdXR0b24sDQogICAgQkNhcmRUZXh0LA0KICB9LA0KICBkaXJlY3RpdmVzOiB7DQogICAgUmlwcGxlLA0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBjb2RlTGlua3MsDQogICAgfQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgdG9hc3QoKSB7DQogICAgICB0aGlzLiRidlRvYXN0LnRvYXN0KCdUb2FzdCB3aXRoIGFjdGlvbiBsaW5rJywgew0KICAgICAgICBocmVmOiAnI2ZvbycsDQogICAgICAgIHRpdGxlOiAnVG9hc3QgTGluaycsDQogICAgICB9KQ0KICAgIH0sDQogIH0sDQp9DQo="},{"version":3,"sources":["ToastsLinks.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ToastsLinks.vue","sourceRoot":"src/views/components/toasts","sourcesContent":["<template>\r\n  <b-card-code title=\"Links\">\r\n    <b-card-text>\r\n      <span>Optionally convert the toast body to a link (</span>\r\n      <code>&lt;a&gt;</code>\r\n      <span>) or </span>\r\n      <code>&lt;router-link&gt;</code>\r\n      <span> (or </span>\r\n      <code>&lt;nuxt-link&gt;</code>\r\n      <span>) via the href and to props respectively. When set, the entire toast body becomes a link.</span>\r\n    </b-card-text>\r\n\r\n    <b-button\r\n      v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\r\n      variant=\"outline-primary\"\r\n      @click=\"toast()\"\r\n    >\r\n      Toast with link\r\n    </b-button>\r\n\r\n    <template #code>\r\n      {{ codeLinks }}\r\n    </template>\r\n  </b-card-code>\r\n</template>\r\n\r\n<script>\r\nimport BCardCode from '@core/components/b-card-code'\r\nimport { BButton, BCardText } from 'bootstrap-vue'\r\nimport Ripple from 'vue-ripple-directive'\r\nimport { codeLinks } from './code'\r\n\r\nexport default {\r\n  components: {\r\n    BCardCode,\r\n    BButton,\r\n    BCardText,\r\n  },\r\n  directives: {\r\n    Ripple,\r\n  },\r\n  data() {\r\n    return {\r\n      codeLinks,\r\n    }\r\n  },\r\n  methods: {\r\n    toast() {\r\n      this.$bvToast.toast('Toast with action link', {\r\n        href: '#foo',\r\n        title: 'Toast Link',\r\n      })\r\n    },\r\n  },\r\n}\r\n</script>\r\n"]}]}