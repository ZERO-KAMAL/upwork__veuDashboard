{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\components\\tab\\TabDynamic.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\components\\tab\\TabDynamic.vue","mtime":1653043181137},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js","mtime":1653043263838},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js","mtime":1653043264822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQkNhcmRDb2RlIGZyb20gJ0Bjb3JlL2NvbXBvbmVudHMvYi1jYXJkLWNvZGUnDQppbXBvcnQgew0KICBCVGFicywgQlRhYiwgQk5hdkl0ZW0sIEJCdXR0b24sDQp9IGZyb20gJ2Jvb3RzdHJhcC12dWUnDQppbXBvcnQgeyBjb2RlRHluYW1pYyB9IGZyb20gJy4vY29kZScNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBjb21wb25lbnRzOiB7DQogICAgQkNhcmRDb2RlLA0KICAgIEJUYWJzLA0KICAgIEJUYWIsDQogICAgQk5hdkl0ZW0sDQogICAgQkJ1dHRvbiwNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgdGFiczogWzFdLA0KICAgICAgdGFiQ291bnRlcjogMSwNCiAgICAgIGNvZGVEeW5hbWljLA0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGNsb3NlVGFiKHgpIHsNCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy50YWJzLmxlbmd0aDsgaSArPSAxKSB7DQogICAgICAgIGlmICh0aGlzLnRhYnNbaV0gPT09IHgpIHsNCiAgICAgICAgICB0aGlzLnRhYnMuc3BsaWNlKGksIDEpDQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9LA0KICAgIG5ld1RhYigpIHsNCiAgICAgIHRoaXMudGFicy5wdXNoKCh0aGlzLnRhYkNvdW50ZXIgKz0gMSkpDQogICAgfSwNCiAgfSwNCn0NCg=="},{"version":3,"sources":["TabDynamic.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TabDynamic.vue","sourceRoot":"src/views/components/tab","sourcesContent":["<template>\r\n  <b-card-code title=\"Dynamic tabs + tabs-end slot\">\r\n    <b-tabs>\r\n      <!-- Render Tabs, supply a unique `key` to each tab -->\r\n      <b-tab\r\n        v-for=\"i in tabs\"\r\n        :key=\"'dyn-tab-' + i\"\r\n        :title=\"'Tab ' + i\"\r\n      >\r\n        Tab contents {{ i }}\r\n        <b-button\r\n          size=\"sm\"\r\n          variant=\"danger\"\r\n          class=\"float-right\"\r\n          @click=\"closeTab(i)\"\r\n        >\r\n          Close tab\r\n        </b-button>\r\n      </b-tab>\r\n\r\n      <!-- New Tab Button (Using tabs-end slot) -->\r\n      <template #tabs-end>\r\n        <b-nav-item\r\n          role=\"presentation\"\r\n          @click.prevent=\"newTab\"\r\n        >\r\n          <b>+</b>\r\n        </b-nav-item>\r\n      </template>\r\n\r\n      <!-- Render this if no tabs -->\r\n      <template #empty>\r\n        <div class=\"text-center text-muted\">\r\n          There are no open tabs<br>\r\n          Open a new tab using the <b>+</b> button above.\r\n        </div>\r\n      </template>\r\n    </b-tabs>\r\n\r\n    <template #code>\r\n      {{ codeDynamic }}\r\n    </template>\r\n  </b-card-code>\r\n</template>\r\n\r\n<script>\r\nimport BCardCode from '@core/components/b-card-code'\r\nimport {\r\n  BTabs, BTab, BNavItem, BButton,\r\n} from 'bootstrap-vue'\r\nimport { codeDynamic } from './code'\r\n\r\nexport default {\r\n  components: {\r\n    BCardCode,\r\n    BTabs,\r\n    BTab,\r\n    BNavItem,\r\n    BButton,\r\n  },\r\n  data() {\r\n    return {\r\n      tabs: [1],\r\n      tabCounter: 1,\r\n      codeDynamic,\r\n    }\r\n  },\r\n  methods: {\r\n    closeTab(x) {\r\n      for (let i = 0; i < this.tabs.length; i += 1) {\r\n        if (this.tabs[i] === x) {\r\n          this.tabs.splice(i, 1)\r\n        }\r\n      }\r\n    },\r\n    newTab() {\r\n      this.tabs.push((this.tabCounter += 1))\r\n    },\r\n  },\r\n}\r\n</script>\r\n"]}]}