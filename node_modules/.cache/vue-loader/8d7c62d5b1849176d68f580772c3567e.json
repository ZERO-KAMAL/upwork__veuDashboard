{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\dashboard\\admin-modules\\users-list\\UserListAddNew.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\dashboard\\admin-modules\\users-list\\UserListAddNew.vue","mtime":1653043181185},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js","mtime":1653043263838},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js","mtime":1653043264822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgew0KICBCU2lkZWJhciwgQkZvcm0sIEJGb3JtR3JvdXAsIEJGb3JtSW5wdXQsIEJGb3JtSW52YWxpZEZlZWRiYWNrLCBCQnV0dG9uLA0KfSBmcm9tICdib290c3RyYXAtdnVlJw0KaW1wb3J0IHsgVmFsaWRhdGlvblByb3ZpZGVyLCBWYWxpZGF0aW9uT2JzZXJ2ZXIgfSBmcm9tICd2ZWUtdmFsaWRhdGUnDQppbXBvcnQgeyByZWYgfSBmcm9tICdAdnVlL2NvbXBvc2l0aW9uLWFwaScNCmltcG9ydCB7IHJlcXVpcmVkLCBhbHBoYU51bSwgZW1haWwgfSBmcm9tICdAdmFsaWRhdGlvbnMnDQppbXBvcnQgZm9ybVZhbGlkYXRpb24gZnJvbSAnQGNvcmUvY29tcC1mdW5jdGlvbnMvZm9ybXMvZm9ybS12YWxpZGF0aW9uJw0KaW1wb3J0IFJpcHBsZSBmcm9tICd2dWUtcmlwcGxlLWRpcmVjdGl2ZScNCmltcG9ydCB2U2VsZWN0IGZyb20gJ3Z1ZS1zZWxlY3QnDQppbXBvcnQgY291bnRyaWVzIGZyb20gJ0AvQGZha2UtZGIvZGF0YS9vdGhlci9jb3VudHJpZXMnDQppbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZScNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBjb21wb25lbnRzOiB7DQogICAgQlNpZGViYXIsDQogICAgQkZvcm0sDQogICAgQkZvcm1Hcm91cCwNCiAgICBCRm9ybUlucHV0LA0KICAgIEJGb3JtSW52YWxpZEZlZWRiYWNrLA0KICAgIEJCdXR0b24sDQogICAgdlNlbGVjdCwNCg0KICAgIC8vIEZvcm0gVmFsaWRhdGlvbg0KICAgIFZhbGlkYXRpb25Qcm92aWRlciwNCiAgICBWYWxpZGF0aW9uT2JzZXJ2ZXIsDQogIH0sDQogIGRpcmVjdGl2ZXM6IHsNCiAgICBSaXBwbGUsDQogIH0sDQogIG1vZGVsOiB7DQogICAgcHJvcDogJ2lzQWRkTmV3VXNlclNpZGViYXJBY3RpdmUnLA0KICAgIGV2ZW50OiAndXBkYXRlOmlzLWFkZC1uZXctdXNlci1zaWRlYmFyLWFjdGl2ZScsDQogIH0sDQogIHByb3BzOiB7DQogICAgaXNBZGROZXdVc2VyU2lkZWJhckFjdGl2ZTogew0KICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgIHJlcXVpcmVkOiB0cnVlLA0KICAgIH0sDQogICAgcm9sZU9wdGlvbnM6IHsNCiAgICAgIHR5cGU6IEFycmF5LA0KICAgICAgcmVxdWlyZWQ6IHRydWUsDQogICAgfSwNCiAgICBicm9rYWdlT3B0aW9uczogew0KICAgICAgdHlwZTogQXJyYXksDQogICAgICByZXF1aXJlZDogdHJ1ZSwNCiAgICB9LA0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICByZXF1aXJlZCwNCiAgICAgIGFscGhhTnVtLA0KICAgICAgZW1haWwsDQogICAgICBjb3VudHJpZXMsDQogICAgfQ0KICB9LA0KICBzZXR1cChwcm9wcywgeyBlbWl0IH0pIHsNCiAgICBjb25zdCBibGFua1VzZXJEYXRhID0gew0KICAgICAgZnVsbE5hbWU6ICcnLA0KICAgICAgdXNlcm5hbWU6ICcnLA0KICAgICAgZW1haWw6ICcnLA0KICAgICAgcm9sZTogbnVsbCwNCiAgICAgIGN1cnJlbnRQbGFuOiBudWxsLA0KICAgICAgY29tcGFueTogJycsDQogICAgICBjb3VudHJ5OiAnJywNCiAgICAgIGNvbnRhY3Q6ICcnLA0KICAgIH0NCg0KICAgIGNvbnN0IHVzZXJEYXRhID0gcmVmKEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoYmxhbmtVc2VyRGF0YSkpKQ0KICAgIGNvbnN0IHJlc2V0dXNlckRhdGEgPSAoKSA9PiB7DQogICAgICB1c2VyRGF0YS52YWx1ZSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoYmxhbmtVc2VyRGF0YSkpDQogICAgfQ0KDQogICAgY29uc3Qgb25TdWJtaXQgPSAoKSA9PiB7DQogICAgICBzdG9yZS5kaXNwYXRjaCgnYXBwLXVzZXIvYWRkVXNlcicsIHVzZXJEYXRhLnZhbHVlKQ0KICAgICAgICAudGhlbigoKSA9PiB7DQogICAgICAgICAgZW1pdCgncmVmZXRjaC1kYXRhJykNCiAgICAgICAgICBlbWl0KCd1cGRhdGU6aXMtYWRkLW5ldy11c2VyLXNpZGViYXItYWN0aXZlJywgZmFsc2UpDQogICAgICAgIH0pDQogICAgfQ0KDQogICAgY29uc3Qgew0KICAgICAgcmVmRm9ybU9ic2VydmVyLA0KICAgICAgZ2V0VmFsaWRhdGlvblN0YXRlLA0KICAgICAgcmVzZXRGb3JtLA0KICAgIH0gPSBmb3JtVmFsaWRhdGlvbihyZXNldHVzZXJEYXRhKQ0KDQogICAgcmV0dXJuIHsNCiAgICAgIHVzZXJEYXRhLA0KICAgICAgb25TdWJtaXQsDQoNCiAgICAgIHJlZkZvcm1PYnNlcnZlciwNCiAgICAgIGdldFZhbGlkYXRpb25TdGF0ZSwNCiAgICAgIHJlc2V0Rm9ybSwNCiAgICB9DQogIH0sDQp9DQo="},{"version":3,"sources":["UserListAddNew.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"UserListAddNew.vue","sourceRoot":"src/views/dashboard/admin-modules/users-list","sourcesContent":["<template>\r\n  <b-sidebar\r\n    id=\"add-new-user-sidebar\"\r\n    :visible=\"isAddNewUserSidebarActive\"\r\n    bg-variant=\"white\"\r\n    sidebar-class=\"sidebar-lg\"\r\n    shadow\r\n    backdrop\r\n    no-header\r\n    right\r\n    @hidden=\"resetForm\"\r\n    @change=\"(val) => $emit('update:is-add-new-user-sidebar-active', val)\"\r\n  >\r\n    <template #default=\"{ hide }\">\r\n      <!-- Header -->\r\n      <div class=\"d-flex justify-content-between align-items-center content-sidebar-header px-2 py-1\">\r\n        <h5 class=\"mb-0\">\r\n          Add New User\r\n        </h5>\r\n\r\n        <feather-icon\r\n          class=\"ml-1 cursor-pointer\"\r\n          icon=\"XIcon\"\r\n          size=\"16\"\r\n          @click=\"hide\"\r\n        />\r\n\r\n      </div>\r\n\r\n      <!-- BODY -->\r\n      <validation-observer\r\n        #default=\"{ handleSubmit }\"\r\n        ref=\"refFormObserver\"\r\n      >\r\n        <!-- Form -->\r\n        <b-form\r\n          class=\"p-2\"\r\n          @submit.prevent=\"handleSubmit(onSubmit)\"\r\n          @reset.prevent=\"resetForm\"\r\n        >\r\n\r\n          <!-- Full Name -->\r\n          <validation-provider\r\n            #default=\"validationContext\"\r\n            name=\"Full Name\"\r\n            rules=\"required\"\r\n          >\r\n            <b-form-group\r\n              label=\"Full Name\"\r\n              label-for=\"full-name\"\r\n            >\r\n              <b-form-input\r\n                id=\"full-name\"\r\n                v-model=\"userData.fullName\"\r\n                autofocus\r\n                :state=\"getValidationState(validationContext)\"\r\n                trim\r\n                placeholder=\"John Doe\"\r\n              />\r\n\r\n              <b-form-invalid-feedback>\r\n                {{ validationContext.errors[0] }}\r\n              </b-form-invalid-feedback>\r\n            </b-form-group>\r\n          </validation-provider>\r\n\r\n          <!-- Username -->\r\n          <validation-provider\r\n            #default=\"validationContext\"\r\n            name=\"Username\"\r\n            rules=\"required|alpha-num\"\r\n          >\r\n            <b-form-group\r\n              label=\"Username\"\r\n              label-for=\"username\"\r\n            >\r\n              <b-form-input\r\n                id=\"username\"\r\n                v-model=\"userData.username\"\r\n                :state=\"getValidationState(validationContext)\"\r\n                trim\r\n              />\r\n\r\n              <b-form-invalid-feedback>\r\n                {{ validationContext.errors[0] }}\r\n              </b-form-invalid-feedback>\r\n            </b-form-group>\r\n          </validation-provider>\r\n\r\n          <!-- Email -->\r\n          <validation-provider\r\n            #default=\"validationContext\"\r\n            name=\"Email\"\r\n            rules=\"required|email\"\r\n          >\r\n            <b-form-group\r\n              label=\"Email\"\r\n              label-for=\"email\"\r\n            >\r\n              <b-form-input\r\n                id=\"email\"\r\n                v-model=\"userData.email\"\r\n                :state=\"getValidationState(validationContext)\"\r\n                trim\r\n              />\r\n\r\n              <b-form-invalid-feedback>\r\n                {{ validationContext.errors[0] }}\r\n              </b-form-invalid-feedback>\r\n            </b-form-group>\r\n          </validation-provider>\r\n\r\n          <!-- Company -->\r\n          <validation-provider\r\n            #default=\"validationContext\"\r\n            name=\"Contact\"\r\n            rules=\"required\"\r\n          >\r\n            <b-form-group\r\n              label=\"Contact\"\r\n              label-for=\"contact\"\r\n            >\r\n              <b-form-input\r\n                id=\"contact\"\r\n                v-model=\"userData.contact\"\r\n                :state=\"getValidationState(validationContext)\"\r\n                trim\r\n              />\r\n\r\n              <b-form-invalid-feedback>\r\n                {{ validationContext.errors[0] }}\r\n              </b-form-invalid-feedback>\r\n            </b-form-group>\r\n          </validation-provider>\r\n\r\n          <!-- Company -->\r\n          <validation-provider\r\n            #default=\"validationContext\"\r\n            name=\"Company\"\r\n            rules=\"required\"\r\n          >\r\n            <b-form-group\r\n              label=\"Company\"\r\n              label-for=\"company\"\r\n            >\r\n              <b-form-input\r\n                id=\"company\"\r\n                v-model=\"userData.company\"\r\n                :state=\"getValidationState(validationContext)\"\r\n                trim\r\n              />\r\n\r\n              <b-form-invalid-feedback>\r\n                {{ validationContext.errors[0] }}\r\n              </b-form-invalid-feedback>\r\n            </b-form-group>\r\n          </validation-provider>\r\n\r\n          <!-- Country -->\r\n          <validation-provider\r\n            #default=\"validationContext\"\r\n            name=\"Country\"\r\n            rules=\"required\"\r\n          >\r\n            <b-form-group\r\n              label=\"Country\"\r\n              label-for=\"country\"\r\n              :state=\"getValidationState(validationContext)\"\r\n            >\r\n              <v-select\r\n                v-model=\"userData.country\"\r\n                :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\r\n                :options=\"countries\"\r\n                :clearable=\"false\"\r\n                input-id=\"country\"\r\n              />\r\n              <b-form-invalid-feedback :state=\"getValidationState(validationContext)\">\r\n                {{ validationContext.errors[0] }}\r\n              </b-form-invalid-feedback>\r\n            </b-form-group>\r\n          </validation-provider>\r\n\r\n          <!-- User Role -->\r\n          <validation-provider\r\n            #default=\"validationContext\"\r\n            name=\"User Role\"\r\n            rules=\"required\"\r\n          >\r\n            <b-form-group\r\n              label=\"User Role\"\r\n              label-for=\"user-role\"\r\n              :state=\"getValidationState(validationContext)\"\r\n            >\r\n              <v-select\r\n                v-model=\"userData.role\"\r\n                :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\r\n                :options=\"roleOptions\"\r\n                :reduce=\"val => val.value\"\r\n                :clearable=\"false\"\r\n                input-id=\"user-role\"\r\n              />\r\n              <b-form-invalid-feedback :state=\"getValidationState(validationContext)\">\r\n                {{ validationContext.errors[0] }}\r\n              </b-form-invalid-feedback>\r\n            </b-form-group>\r\n          </validation-provider>\r\n\r\n          <!-- Plan -->\r\n          <validation-provider\r\n            #default=\"validationContext\"\r\n            name=\"Plan\"\r\n            rules=\"required\"\r\n          >\r\n            <b-form-group\r\n              label=\"Plan\"\r\n              label-for=\"plan\"\r\n              :state=\"getValidationState(validationContext)\"\r\n            >\r\n              <v-select\r\n                v-model=\"userData.currentPlan\"\r\n                :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\r\n                :options=\"brokageOptions\"\r\n                :reduce=\"val => val.value\"\r\n                :clearable=\"false\"\r\n                input-id=\"plan\"\r\n              />\r\n              <b-form-invalid-feedback :state=\"getValidationState(validationContext)\">\r\n                {{ validationContext.errors[0] }}\r\n              </b-form-invalid-feedback>\r\n            </b-form-group>\r\n          </validation-provider>\r\n\r\n          <!-- Form Actions -->\r\n          <div class=\"d-flex mt-2\">\r\n            <b-button\r\n              v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\r\n              variant=\"primary\"\r\n              class=\"mr-2\"\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </b-button>\r\n            <b-button\r\n              v-ripple.400=\"'rgba(186, 191, 199, 0.15)'\"\r\n              type=\"button\"\r\n              variant=\"outline-secondary\"\r\n              @click=\"hide\"\r\n            >\r\n              Cancel\r\n            </b-button>\r\n          </div>\r\n\r\n        </b-form>\r\n      </validation-observer>\r\n    </template>\r\n  </b-sidebar>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  BSidebar, BForm, BFormGroup, BFormInput, BFormInvalidFeedback, BButton,\r\n} from 'bootstrap-vue'\r\nimport { ValidationProvider, ValidationObserver } from 'vee-validate'\r\nimport { ref } from '@vue/composition-api'\r\nimport { required, alphaNum, email } from '@validations'\r\nimport formValidation from '@core/comp-functions/forms/form-validation'\r\nimport Ripple from 'vue-ripple-directive'\r\nimport vSelect from 'vue-select'\r\nimport countries from '@/@fake-db/data/other/countries'\r\nimport store from '@/store'\r\n\r\nexport default {\r\n  components: {\r\n    BSidebar,\r\n    BForm,\r\n    BFormGroup,\r\n    BFormInput,\r\n    BFormInvalidFeedback,\r\n    BButton,\r\n    vSelect,\r\n\r\n    // Form Validation\r\n    ValidationProvider,\r\n    ValidationObserver,\r\n  },\r\n  directives: {\r\n    Ripple,\r\n  },\r\n  model: {\r\n    prop: 'isAddNewUserSidebarActive',\r\n    event: 'update:is-add-new-user-sidebar-active',\r\n  },\r\n  props: {\r\n    isAddNewUserSidebarActive: {\r\n      type: Boolean,\r\n      required: true,\r\n    },\r\n    roleOptions: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n    brokageOptions: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      required,\r\n      alphaNum,\r\n      email,\r\n      countries,\r\n    }\r\n  },\r\n  setup(props, { emit }) {\r\n    const blankUserData = {\r\n      fullName: '',\r\n      username: '',\r\n      email: '',\r\n      role: null,\r\n      currentPlan: null,\r\n      company: '',\r\n      country: '',\r\n      contact: '',\r\n    }\r\n\r\n    const userData = ref(JSON.parse(JSON.stringify(blankUserData)))\r\n    const resetuserData = () => {\r\n      userData.value = JSON.parse(JSON.stringify(blankUserData))\r\n    }\r\n\r\n    const onSubmit = () => {\r\n      store.dispatch('app-user/addUser', userData.value)\r\n        .then(() => {\r\n          emit('refetch-data')\r\n          emit('update:is-add-new-user-sidebar-active', false)\r\n        })\r\n    }\r\n\r\n    const {\r\n      refFormObserver,\r\n      getValidationState,\r\n      resetForm,\r\n    } = formValidation(resetuserData)\r\n\r\n    return {\r\n      userData,\r\n      onSubmit,\r\n\r\n      refFormObserver,\r\n      getValidationState,\r\n      resetForm,\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '@core/scss/vue/libs/vue-select.scss';\r\n\r\n#add-new-user-sidebar {\r\n  .vs__dropdown-menu {\r\n    max-height: 200px !important;\r\n  }\r\n}\r\n</style>\r\n"]}]}