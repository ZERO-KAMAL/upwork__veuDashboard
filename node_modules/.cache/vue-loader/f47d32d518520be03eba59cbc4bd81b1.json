{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\views\\forms\\form-element\\form-tag\\FormTagsDetecting.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\views\\forms\\form-element\\form-tag\\FormTagsDetecting.vue","mtime":1653043181379},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js","mtime":1653043263838},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js","mtime":1653043264822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQkNhcmRDb2RlIGZyb20gJ0Bjb3JlL2NvbXBvbmVudHMvYi1jYXJkLWNvZGUnDQppbXBvcnQgeyBCRm9ybVRhZ3MsIEJDYXJkVGV4dCB9IGZyb20gJ2Jvb3RzdHJhcC12dWUnDQppbXBvcnQgeyBjb2RlRGV0ZWN0aW5nIH0gZnJvbSAnLi9jb2RlJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGNvbXBvbmVudHM6IHsNCiAgICBCQ2FyZENvZGUsDQogICAgQkZvcm1UYWdzLA0KICAgIEJDYXJkVGV4dCwNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgdGFnczogW10sDQogICAgICB2YWxpZFRhZ3M6IFtdLA0KICAgICAgaW52YWxpZFRhZ3M6IFtdLA0KICAgICAgZHVwbGljYXRlVGFnczogW10sDQogICAgICBjb2RlRGV0ZWN0aW5nLA0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIG9uVGFnU3RhdGUodmFsaWQsIGludmFsaWQsIGR1cGxpY2F0ZSkgew0KICAgICAgdGhpcy52YWxpZFRhZ3MgPSB2YWxpZA0KICAgICAgdGhpcy5pbnZhbGlkVGFncyA9IGludmFsaWQNCiAgICAgIHRoaXMuZHVwbGljYXRlVGFncyA9IGR1cGxpY2F0ZQ0KICAgIH0sDQogICAgdmFsaWRhdG9yKHRhZykgew0KICAgICAgcmV0dXJuIHRhZy5sZW5ndGggPiAyICYmIHRhZy5sZW5ndGggPCA2DQogICAgfSwNCiAgfSwNCn0NCg=="},{"version":3,"sources":["FormTagsDetecting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FormTagsDetecting.vue","sourceRoot":"src/views/forms/form-element/form-tag","sourcesContent":["<template>\r\n  <b-card-code\r\n    title=\"Detecting new, invalid, and duplicate tags\"\r\n  >\r\n    <b-card-text>\r\n      <span>The event </span>\r\n      <code>tag-state</code>\r\n      <span>will be emitted whenever new tags are entered into the new tag input element, tags that do not pass validation,\r\n        or duplicate tags are detected. The event handler will receive three arrays as its arguments:\r\n      </span>\r\n      <code>validTags, invalidTags , duplicateTags </code>\r\n    </b-card-text>\r\n\r\n    <div>\r\n      <label for=\"tags-state-event\">Enter tags</label>\r\n      <b-form-tags\r\n        v-model=\"tags\"\r\n        input-id=\"tags-state-event\"\r\n        :tag-validator=\"validator\"\r\n        placeholder=\"Enter tags (3-5 characters) separated by space\"\r\n        separator=\" \"\r\n        @tag-state=\"onTagState\"\r\n      />\r\n      <b-card-text class=\"mt-2\">\r\n        Tags: {{ tags }}\r\n      </b-card-text>\r\n      <b-card-text>Event values:</b-card-text>\r\n      <ul>\r\n        <li>validTags: {{ validTags }}</li>\r\n        <li>invalidTags: {{ invalidTags }}</li>\r\n        <li>duplicateTags: {{ duplicateTags }}</li>\r\n      </ul>\r\n    </div>\r\n\r\n    <template #code>\r\n      {{ codeDetecting }}\r\n    </template>\r\n  </b-card-code>\r\n</template>\r\n\r\n<script>\r\nimport BCardCode from '@core/components/b-card-code'\r\nimport { BFormTags, BCardText } from 'bootstrap-vue'\r\nimport { codeDetecting } from './code'\r\n\r\nexport default {\r\n  components: {\r\n    BCardCode,\r\n    BFormTags,\r\n    BCardText,\r\n  },\r\n  data() {\r\n    return {\r\n      tags: [],\r\n      validTags: [],\r\n      invalidTags: [],\r\n      duplicateTags: [],\r\n      codeDetecting,\r\n    }\r\n  },\r\n  methods: {\r\n    onTagState(valid, invalid, duplicate) {\r\n      this.validTags = valid\r\n      this.invalidTags = invalid\r\n      this.duplicateTags = duplicate\r\n    },\r\n    validator(tag) {\r\n      return tag.length > 2 && tag.length < 6\r\n    },\r\n  },\r\n}\r\n</script>\r\n"]}]}