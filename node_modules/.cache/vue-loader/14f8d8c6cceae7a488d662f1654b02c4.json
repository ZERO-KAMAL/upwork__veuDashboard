{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\views\\components\\toasts\\ToastsAdvance.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\views\\components\\toasts\\ToastsAdvance.vue","mtime":1653043181155},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js","mtime":1653043263838},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js","mtime":1653043264822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQkNhcmRDb2RlIGZyb20gJ0Bjb3JlL2NvbXBvbmVudHMvYi1jYXJkLWNvZGUnDQovLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUNCmltcG9ydCB7IEJCdXR0b24sIEJTcGlubmVyLEJDYXJkVGV4dCB9IGZyb20gJ2Jvb3RzdHJhcC12dWUnDQppbXBvcnQgUmlwcGxlIGZyb20gJ3Z1ZS1yaXBwbGUtZGlyZWN0aXZlJw0KaW1wb3J0IHsgY29kZUFkdmFuY2UgfSBmcm9tICcuL2NvZGUnDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgY29tcG9uZW50czogew0KICAgIEJDYXJkQ29kZSwNCiAgICBCQnV0dG9uLA0KICAgIEJDYXJkVGV4dCwNCiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUNCiAgICBCU3Bpbm5lciwNCiAgfSwNCiAgZGlyZWN0aXZlczogew0KICAgIFJpcHBsZSwNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgY291bnQ6IDAsDQogICAgICBjb2RlQWR2YW5jZSwNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBwb3BUb2FzdCgpIHsNCiAgICAgIC8vIFVzZSBhIHNob3J0ZXIgbmFtZSBmb3IgdGhpcy4kY3JlYXRlRWxlbWVudA0KICAgICAgY29uc3QgaCA9IHRoaXMuJGNyZWF0ZUVsZW1lbnQNCiAgICAgIC8vIEluY3JlbWVudCB0aGUgdG9hc3QgY291bnQNCiAgICAgIHRoaXMuY291bnQgKz0gMQ0KICAgICAgLy8gQ3JlYXRlIHRoZSBtZXNzYWdlDQogICAgICBjb25zdCB2Tm9kZXNNc2cgPSBoKCdwJywgeyBjbGFzczogWyd0ZXh0LWNlbnRlcicsICdtYi0wJ10gfSwgWw0KICAgICAgICBoKCdiLXNwaW5uZXInLCB7IHByb3BzOiB7IHR5cGU6ICdncm93Jywgc21hbGw6IHRydWUgfSB9KSwNCiAgICAgICAgJyBGbGFzaHkgJywNCiAgICAgICAgaCgnc3Ryb25nJywgJ3RvYXN0JyksDQogICAgICAgIGAgbWVzc2FnZSAjJHt0aGlzLmNvdW50fSBgLA0KICAgICAgICBoKCdiLXNwaW5uZXInLCB7IHByb3BzOiB7IHR5cGU6ICdncm93Jywgc21hbGw6IHRydWUgfSB9KSwNCiAgICAgIF0pDQogICAgICAvLyBDcmVhdGUgdGhlIHRpdGxlDQogICAgICBjb25zdCB2Tm9kZXNUaXRsZSA9IGgoJ2RpdicsIHsgY2xhc3M6IFsnZC1mbGV4JywgJ2ZsZXgtZ3Jvdy0xJywgJ2FsaWduLWl0ZW1zLWJhc2VsaW5lJywgJ21yLTInXSB9LCBbDQogICAgICAgIGgoJ3N0cm9uZycsIHsgY2xhc3M6ICdtci0yJyB9LCAnVGhlIFRpdGxlJyksDQogICAgICAgIGgoJ3NtYWxsJywgeyBjbGFzczogJ21sLWF1dG8gZm9udC1pdGFsaWNzJyB9LCAnNSBtaW51dGVzIGFnbycpLA0KICAgICAgXSkNCiAgICAgIC8vIFBhc3MgdGhlIFZOb2RlcyBhcyBhbiBhcnJheSBmb3IgbWVzc2FnZSBhbmQgdGl0bGUNCiAgICAgIHRoaXMuJGJ2VG9hc3QudG9hc3QoW3ZOb2Rlc01zZ10sIHsNCiAgICAgICAgdGl0bGU6IFt2Tm9kZXNUaXRsZV0sDQogICAgICAgIHNvbGlkOiBmYWxzZSwNCiAgICAgICAgdmFyaWFudDogJ2luZm8nLA0KICAgICAgfSkNCiAgICB9LA0KICB9LA0KfQ0K"},{"version":3,"sources":["ToastsAdvance.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ToastsAdvance.vue","sourceRoot":"src/views/components/toasts","sourcesContent":["<template>\r\n  <b-card-code title=\"Advanced usage\">\r\n    <b-card-text>\r\n      <span>When using the </span>\r\n      <code>this.$bvToast.toast(...)</code>\r\n      <span>\r\n        method for generating toasts, you may want the toast content to be more than just a string message. As mentioned\r\n        in the Toasts on demand section above, you can pass arrays of\r\n      </span>\r\n      <code>VNodes</code>\r\n      <span> as the message and title for more complex content.</span>\r\n    </b-card-text>\r\n\r\n    <b-button\r\n      v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\r\n      variant=\"outline-primary\"\r\n      @click=\"popToast\"\r\n    >\r\n      Show Toast with custom content\r\n    </b-button>\r\n\r\n    <template #code>\r\n      {{ codeAdvance }}\r\n    </template>\r\n  </b-card-code>\r\n</template>\r\n\r\n<script>\r\nimport BCardCode from '@core/components/b-card-code'\r\n// eslint-disable-next-line\r\nimport { BButton, BSpinner,BCardText } from 'bootstrap-vue'\r\nimport Ripple from 'vue-ripple-directive'\r\nimport { codeAdvance } from './code'\r\n\r\nexport default {\r\n  components: {\r\n    BCardCode,\r\n    BButton,\r\n    BCardText,\r\n    // eslint-disable-next-line\r\n    BSpinner,\r\n  },\r\n  directives: {\r\n    Ripple,\r\n  },\r\n  data() {\r\n    return {\r\n      count: 0,\r\n      codeAdvance,\r\n    }\r\n  },\r\n  methods: {\r\n    popToast() {\r\n      // Use a shorter name for this.$createElement\r\n      const h = this.$createElement\r\n      // Increment the toast count\r\n      this.count += 1\r\n      // Create the message\r\n      const vNodesMsg = h('p', { class: ['text-center', 'mb-0'] }, [\r\n        h('b-spinner', { props: { type: 'grow', small: true } }),\r\n        ' Flashy ',\r\n        h('strong', 'toast'),\r\n        ` message #${this.count} `,\r\n        h('b-spinner', { props: { type: 'grow', small: true } }),\r\n      ])\r\n      // Create the title\r\n      const vNodesTitle = h('div', { class: ['d-flex', 'flex-grow-1', 'align-items-baseline', 'mr-2'] }, [\r\n        h('strong', { class: 'mr-2' }, 'The Title'),\r\n        h('small', { class: 'ml-auto font-italics' }, '5 minutes ago'),\r\n      ])\r\n      // Pass the VNodes as an array for message and title\r\n      this.$bvToast.toast([vNodesMsg], {\r\n        title: [vNodesTitle],\r\n        solid: false,\r\n        variant: 'info',\r\n      })\r\n    },\r\n  },\r\n}\r\n</script>\r\n"]}]}