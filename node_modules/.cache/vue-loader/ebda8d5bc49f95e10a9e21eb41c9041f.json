{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\views\\apps\\email\\Email.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\views\\apps\\email\\Email.vue","mtime":1653043180872},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js","mtime":1653043263838},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js","mtime":1653043264822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Email.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Email.vue","sourceRoot":"src/views/apps/email","sourcesContent":["<template>\r\n  <!-- Need to add height inherit because Vue 2 don't support multiple root ele -->\r\n  <div style=\"height: inherit\">\r\n    <div\r\n      class=\"body-content-overlay\"\r\n      :class=\"{'show': mqShallShowLeftSidebar}\"\r\n      @click=\"mqShallShowLeftSidebar = false\"\r\n    />\r\n\r\n    <!-- Email List -->\r\n    <div class=\"email-app-list\">\r\n\r\n      <!-- App Searchbar Header -->\r\n      <div class=\"app-fixed-search d-flex align-items-center\">\r\n\r\n        <!-- Toggler -->\r\n        <div class=\"sidebar-toggle d-block d-lg-none ml-1\">\r\n          <feather-icon\r\n            icon=\"MenuIcon\"\r\n            size=\"21\"\r\n            class=\"cursor-pointer\"\r\n            @click=\"mqShallShowLeftSidebar = true\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Searchbar -->\r\n        <div class=\"d-flex align-content-center justify-content-between w-100\">\r\n          <b-input-group class=\"input-group-merge\">\r\n            <b-input-group-prepend is-text>\r\n              <feather-icon\r\n                icon=\"SearchIcon\"\r\n                class=\"text-muted\"\r\n              />\r\n            </b-input-group-prepend>\r\n            <b-form-input\r\n              :value=\"searchQuery\"\r\n              placeholder=\"Search email\"\r\n              @input=\"updateRouteQuery\"\r\n            />\r\n          </b-input-group>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- App Action Bar -->\r\n      <div class=\"app-action\">\r\n        <div class=\"action-left\">\r\n          <b-form-checkbox\r\n            :checked=\"selectAllEmailCheckbox\"\r\n            :indeterminate=\"isSelectAllEmailCheckboxIndeterminate\"\r\n            @change=\"selectAllCheckboxUpdate\"\r\n          >\r\n            Select All\r\n          </b-form-checkbox>\r\n        </div>\r\n        <div\r\n          v-show=\"selectedEmails.length\"\r\n          class=\"align-items-center\"\r\n          :class=\"{'d-flex': selectedEmails.length}\"\r\n        >\r\n\r\n          <!-- Update Mail Folder Dropdown -->\r\n          <b-dropdown\r\n            variant=\"link\"\r\n            no-caret\r\n            toggle-class=\"p-0\"\r\n            right\r\n          >\r\n            <template #button-content>\r\n              <feather-icon\r\n                icon=\"FolderIcon\"\r\n                size=\"17\"\r\n                class=\"align-middle text-body\"\r\n              />\r\n            </template>\r\n\r\n            <b-dropdown-item @click=\"moveSelectedEmailsToFolder('draft')\">\r\n              <feather-icon icon=\"Edit2Icon\" />\r\n              <span class=\"align-middle ml-50\">Draft</span>\r\n            </b-dropdown-item>\r\n\r\n            <b-dropdown-item @click=\"moveSelectedEmailsToFolder('spam')\">\r\n              <feather-icon icon=\"InfoIcon\" />\r\n              <span class=\"align-middle ml-50\">Spam</span>\r\n            </b-dropdown-item>\r\n\r\n            <b-dropdown-item\r\n              v-show=\"$route.params.folder !== 'trash'\"\r\n              @click=\"moveSelectedEmailsToFolder('trash')\"\r\n            >\r\n              <feather-icon icon=\"TrashIcon\" />\r\n              <span class=\"align-middle ml-50\">Trash</span>\r\n            </b-dropdown-item>\r\n          </b-dropdown>\r\n\r\n          <!-- Update Mail Folder Dropdown -->\r\n          <b-dropdown\r\n            variant=\"link\"\r\n            no-caret\r\n            toggle-class=\"p-0\"\r\n            class=\"ml-1\"\r\n            right\r\n          >\r\n            <template #button-content>\r\n              <feather-icon\r\n                icon=\"TagIcon\"\r\n                size=\"17\"\r\n                class=\"align-middle text-body\"\r\n              />\r\n            </template>\r\n            <b-dropdown-item @click=\"updateSelectedEmailsLabel('personal')\">\r\n              <span class=\"mr-50 bullet bullet-success bullet-sm\" />\r\n              <span>Personal</span>\r\n            </b-dropdown-item>\r\n            <b-dropdown-item @click=\"updateSelectedEmailsLabel('company')\">\r\n              <span class=\"mr-50 bullet bullet-primary bullet-sm\" />\r\n              <span>Company</span>\r\n            </b-dropdown-item>\r\n            <b-dropdown-item @click=\"updateSelectedEmailsLabel('important')\">\r\n              <span class=\"mr-50 bullet bullet-warning bullet-sm\" />\r\n              <span>Important</span>\r\n            </b-dropdown-item>\r\n            <b-dropdown-item @click=\"updateSelectedEmailsLabel('private')\">\r\n              <span class=\"mr-50 bullet bullet-danger bullet-sm\" />\r\n              <span>Private</span>\r\n            </b-dropdown-item>\r\n          </b-dropdown>\r\n\r\n          <feather-icon\r\n            icon=\"MailIcon\"\r\n            size=\"17\"\r\n            class=\"cursor-pointer ml-1\"\r\n            @click=\"markSelectedEmailsAsUnread\"\r\n          />\r\n\r\n          <feather-icon\r\n            v-show=\"$route.params.folder !== 'trash'\"\r\n            icon=\"TrashIcon\"\r\n            size=\"17\"\r\n            class=\"cursor-pointer ml-1\"\r\n            @click=\"moveSelectedEmailsToFolder('trash')\"\r\n          />\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Emails List -->\r\n      <vue-perfect-scrollbar\r\n        :settings=\"perfectScrollbarSettings\"\r\n        class=\"email-user-list scroll-area\"\r\n      >\r\n        <ul class=\"email-media-list\">\r\n          <b-media\r\n            v-for=\"email in emails\"\r\n            :key=\"email.id\"\r\n            tag=\"li\"\r\n            no-body\r\n            :class=\"{ 'mail-read': email.isRead }\"\r\n            @click=\"updateEmailViewData(email)\"\r\n          >\r\n\r\n            <b-media-aside class=\"media-left mr-50\">\r\n              <b-avatar\r\n                class=\"avatar\"\r\n                size=\"40\"\r\n                variant=\"primary\"\r\n                :src=\"email.from.avatar\"\r\n              />\r\n              <div class=\"user-action\">\r\n                <b-form-checkbox\r\n                  :checked=\"selectedEmails.includes(email.id)\"\r\n                  @change=\"toggleSelectedMail(email.id)\"\r\n                  @click.native.stop\r\n                />\r\n                <div class=\"email-favorite\">\r\n                  <feather-icon\r\n                    icon=\"StarIcon\"\r\n                    size=\"17\"\r\n                    :class=\"{ 'text-warning fill-current': email.isStarred }\"\r\n                    @click.stop=\"toggleStarred(email)\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </b-media-aside>\r\n\r\n            <b-media-body>\r\n              <div class=\"mail-details\">\r\n                <div class=\"mail-items\">\r\n                  <h5 class=\"mb-25\">\r\n                    {{ email.from.name }}\r\n                  </h5>\r\n                  <span class=\"text-truncate\">{{ email.subject }}</span>\r\n                </div>\r\n                <div class=\"mail-meta-item\">\r\n                  <feather-icon\r\n                    v-if=\"email.attachments.length\"\r\n                    icon=\"PaperclipIcon\"\r\n                  />\r\n                  <span\r\n                    v-for=\"label in email.labels\"\r\n                    :key=\"label\"\r\n                    class=\"mx-50 bullet bullet-sm\"\r\n                    :class=\"`bullet-${resolveLabelColor(label)}`\"\r\n                  />\r\n                  <span class=\"mail-date\">{{ formatDateToMonthShort(email.time, { hour: 'numeric', minute: 'numeric', }) }}</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"mail-message\">\r\n                <p class=\"text-truncate mb-0\">\r\n                  {{ filterTags(email.message) }}\r\n                </p>\r\n              </div>\r\n            </b-media-body>\r\n          </b-media>\r\n        </ul>\r\n        <div\r\n          class=\"no-results\"\r\n          :class=\"{'show': !emails.length}\"\r\n        >\r\n          <h5>No Items Found</h5>\r\n        </div>\r\n      </vue-perfect-scrollbar>\r\n    </div>\r\n\r\n    <!-- Email View/Detail -->\r\n    <email-view\r\n      :class=\"{'show': showEmailDetails}\"\r\n      :email-view-data=\"emailViewData\"\r\n      :opended-email-meta=\"opendedEmailMeta\"\r\n      @close-email-view=\"showEmailDetails = false\"\r\n      @move-email-to-folder=\"moveOpenEmailToFolder\"\r\n      @toggle-email-starred=\"toggleStarred(emailViewData)\"\r\n      @update-email-label=\"updateOpenEmailLabel\"\r\n      @mark-email-unread=\"markOpenEmailAsUnread\"\r\n      @change-opened-email=\"changeOpenedEmail\"\r\n    />\r\n\r\n    <!-- Sidebar -->\r\n    <portal to=\"content-renderer-sidebar-left\">\r\n      <email-left-sidebar\r\n        :shall-show-email-compose-modal.sync=\"shallShowEmailComposeModal\"\r\n        :emails-meta=\"emailsMeta\"\r\n        :class=\"{'show': mqShallShowLeftSidebar}\"\r\n        @close-left-sidebar=\"mqShallShowLeftSidebar = false\"\r\n      />\r\n    </portal>\r\n\r\n    <!-- Compose Email Modal -->\r\n    <email-compose v-model=\"shallShowEmailComposeModal\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport store from '@/store'\r\nimport {\r\n  ref, onUnmounted, computed, watch,\r\n  // ref, watch, computed, onUnmounted,\r\n} from '@vue/composition-api'\r\nimport {\r\n  BFormInput, BInputGroup, BInputGroupPrepend, BDropdown, BDropdownItem,\r\n  BFormCheckbox, BMedia, BMediaAside, BMediaBody, BAvatar,\r\n} from 'bootstrap-vue'\r\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\r\nimport { filterTags, formatDateToMonthShort } from '@core/utils/filter'\r\nimport { useRouter } from '@core/utils/utils'\r\nimport { useResponsiveAppLeftSidebarVisibility } from '@core/comp-functions/ui/app'\r\nimport EmailLeftSidebar from './EmailLeftSidebar.vue'\r\nimport EmailView from './EmailView.vue'\r\nimport emailStoreModule from './emailStoreModule'\r\nimport useEmail from './useEmail'\r\nimport EmailCompose from './EmailCompose.vue'\r\n\r\nexport default {\r\n  components: {\r\n    BFormInput,\r\n    BInputGroup,\r\n    BInputGroupPrepend,\r\n    BDropdown,\r\n    BDropdownItem,\r\n    BFormCheckbox,\r\n    BMedia,\r\n    BMediaAside,\r\n    BMediaBody,\r\n    BAvatar,\r\n\r\n    // 3rd Party\r\n    VuePerfectScrollbar,\r\n\r\n    // App SFC\r\n    EmailLeftSidebar,\r\n    EmailView,\r\n    EmailCompose,\r\n  },\r\n  setup() {\r\n    const EMAIL_APP_STORE_MODULE_NAME = 'app-email'\r\n\r\n    // Register module\r\n    if (!store.hasModule(EMAIL_APP_STORE_MODULE_NAME)) store.registerModule(EMAIL_APP_STORE_MODULE_NAME, emailStoreModule)\r\n\r\n    // UnRegister on leave\r\n    onUnmounted(() => {\r\n      if (store.hasModule(EMAIL_APP_STORE_MODULE_NAME)) store.unregisterModule(EMAIL_APP_STORE_MODULE_NAME)\r\n    })\r\n\r\n    const { route, router } = useRouter()\r\n    const { resolveLabelColor } = useEmail()\r\n\r\n    // Route Params\r\n    const routeParams = computed(() => route.value.params)\r\n    watch(routeParams, () => {\r\n      // eslint-disable-next-line no-use-before-define\r\n      fetchEmails()\r\n    })\r\n\r\n    // Emails & EmailsMeta\r\n    const emails = ref([])\r\n    const emailsMeta = ref({})\r\n\r\n    const perfectScrollbarSettings = {\r\n      maxScrollbarLength: 150,\r\n    }\r\n\r\n    // Search Query\r\n    const routeQuery = computed(() => route.value.query.q)\r\n    const searchQuery = ref(routeQuery.value)\r\n    watch(routeQuery, val => {\r\n      searchQuery.value = val\r\n    })\r\n    // eslint-disable-next-line no-use-before-define\r\n    watch(searchQuery, () => fetchEmails())\r\n    const updateRouteQuery = val => {\r\n      const currentRouteQuery = JSON.parse(JSON.stringify(route.value.query))\r\n\r\n      if (val) currentRouteQuery.q = val\r\n      else delete currentRouteQuery.q\r\n\r\n      router.replace({ name: route.name, query: currentRouteQuery })\r\n    }\r\n\r\n    const fetchEmails = () => {\r\n      store.dispatch('app-email/fetchEmails', {\r\n        q: searchQuery.value,\r\n        folder: router.currentRoute.params.folder || 'inbox',\r\n        label: router.currentRoute.params.label,\r\n      })\r\n        .then(response => {\r\n          emails.value = response.data.emails\r\n          emailsMeta.value = response.data.emailsMeta\r\n        })\r\n    }\r\n\r\n    fetchEmails()\r\n\r\n    // ------------------------------------------------\r\n    // Mail Selection\r\n    // ------------------------------------------------\r\n    const selectedEmails = ref([])\r\n    const toggleSelectedMail = mailId => {\r\n      const mailIndex = selectedEmails.value.indexOf(mailId)\r\n\r\n      if (mailIndex === -1) selectedEmails.value.push(mailId)\r\n      else selectedEmails.value.splice(mailIndex, 1)\r\n    }\r\n    const selectAllEmailCheckbox = computed(() => emails.value.length && (emails.value.length === selectedEmails.value.length))\r\n    const isSelectAllEmailCheckboxIndeterminate = computed(() => Boolean(selectedEmails.value.length) && emails.value.length !== selectedEmails.value.length)\r\n    const selectAllCheckboxUpdate = val => {\r\n      selectedEmails.value = val ? emails.value.map(mail => mail.id) : []\r\n    }\r\n    // ? Watcher to reset selectedEmails is somewhere below due to watch dependecy fullfilment\r\n\r\n    // ------------------------------------------------\r\n    // Mail Actions\r\n    // ------------------------------------------------\r\n    const toggleStarred = email => {\r\n      store.dispatch('app-email/updateEmail', {\r\n        emailIds: [email.id],\r\n        dataToUpdate: { isStarred: !email.isStarred },\r\n      }).then(() => {\r\n        // eslint-disable-next-line no-param-reassign\r\n        email.isStarred = !email.isStarred\r\n      })\r\n    }\r\n\r\n    const moveSelectedEmailsToFolder = folder => {\r\n      store.dispatch('app-email/updateEmail', {\r\n        emailIds: selectedEmails.value,\r\n        dataToUpdate: { folder },\r\n      })\r\n        .then(() => { fetchEmails() })\r\n        .finally(() => { selectedEmails.value = [] })\r\n    }\r\n\r\n    const updateSelectedEmailsLabel = label => {\r\n      store.dispatch('app-email/updateEmailLabels', {\r\n        emailIds: selectedEmails.value,\r\n        label,\r\n      })\r\n        .then(() => { fetchEmails() })\r\n        .finally(() => { selectedEmails.value = [] })\r\n    }\r\n\r\n    const markSelectedEmailsAsUnread = () => {\r\n      store.dispatch('app-email/updateEmail', {\r\n        emailIds: selectedEmails.value,\r\n        dataToUpdate: { isRead: false },\r\n      })\r\n        .then(() => { fetchEmails() })\r\n        .finally(() => { selectedEmails.value = [] })\r\n    }\r\n\r\n    // ------------------------------------------------\r\n    // Email Details\r\n    // ------------------------------------------------\r\n    const showEmailDetails = ref(false)\r\n    const emailViewData = ref({})\r\n    const opendedEmailMeta = computed(() => {\r\n      const openedEmailIndex = emails.value.findIndex(e => e.id === emailViewData.value.id)\r\n      return {\r\n        hasNextEmail: Boolean(emails.value[openedEmailIndex + 1]),\r\n        hasPreviousEmail: Boolean(emails.value[openedEmailIndex - 1]),\r\n      }\r\n    })\r\n    const updateEmailViewData = email => {\r\n      // Mark email is read\r\n      store.dispatch('app-email/updateEmail', {\r\n        emailIds: [email.id],\r\n        dataToUpdate: { isRead: true },\r\n      })\r\n        .then(() => {\r\n          // If opened email is unread then decrease badge count for email meta based on email folder\r\n          if (!email.isRead && (email.folder === 'inbox' || email.folder === 'spam')) {\r\n            emailsMeta.value[email.folder] -= 1\r\n          }\r\n\r\n          // eslint-disable-next-line no-param-reassign\r\n          email.isRead = true\r\n        })\r\n        .finally(() => {\r\n          emailViewData.value = email\r\n          showEmailDetails.value = true\r\n        })\r\n    }\r\n    const moveOpenEmailToFolder = folder => {\r\n      selectedEmails.value = [emailViewData.value.id]\r\n      moveSelectedEmailsToFolder(folder)\r\n      selectedEmails.value = []\r\n      showEmailDetails.value = false\r\n    }\r\n    const updateOpenEmailLabel = label => {\r\n      selectedEmails.value = [emailViewData.value.id]\r\n      updateSelectedEmailsLabel(label)\r\n\r\n      // Update label in opened email\r\n      const labelIndex = emailViewData.value.labels.indexOf(label)\r\n      if (labelIndex === -1) emailViewData.value.labels.push(label)\r\n      else emailViewData.value.labels.splice(labelIndex, 1)\r\n\r\n      selectedEmails.value = []\r\n    }\r\n\r\n    const markOpenEmailAsUnread = () => {\r\n      selectedEmails.value = [emailViewData.value.id]\r\n      markSelectedEmailsAsUnread()\r\n\r\n      selectedEmails.value = []\r\n      showEmailDetails.value = false\r\n    }\r\n\r\n    const changeOpenedEmail = dir => {\r\n      const openedEmailIndex = emails.value.findIndex(e => e.id === emailViewData.value.id)\r\n      const newEmailIndex = dir === 'previous' ? openedEmailIndex - 1 : openedEmailIndex + 1\r\n      emailViewData.value = emails.value[newEmailIndex]\r\n    }\r\n\r\n    // * If someone clicks on filter while viewing detail => Close the email detail view\r\n    watch(routeParams, () => {\r\n      showEmailDetails.value = false\r\n    })\r\n\r\n    // * Watcher to reset selectedEmails\r\n    // ? You can also use showEmailDetails (instead of `emailViewData`) but it will trigger execution twice in this case\r\n    // eslint-disable-next-line no-use-before-define\r\n    watch([emailViewData, routeParams], () => {\r\n      selectedEmails.value = []\r\n    })\r\n\r\n    // Compose\r\n    const shallShowEmailComposeModal = ref(false)\r\n\r\n    // Left Sidebar Responsiveness\r\n    const { mqShallShowLeftSidebar } = useResponsiveAppLeftSidebarVisibility()\r\n\r\n    return {\r\n      // UI\r\n      perfectScrollbarSettings,\r\n\r\n      // Emails & EmailsMeta\r\n      emails,\r\n      emailsMeta,\r\n\r\n      // Mail Selection\r\n      selectAllEmailCheckbox,\r\n      isSelectAllEmailCheckboxIndeterminate,\r\n      selectedEmails,\r\n      toggleSelectedMail,\r\n      selectAllCheckboxUpdate,\r\n\r\n      // Mail Actions\r\n      toggleStarred,\r\n      moveSelectedEmailsToFolder,\r\n      updateSelectedEmailsLabel,\r\n      markSelectedEmailsAsUnread,\r\n\r\n      // Email Details\r\n      showEmailDetails,\r\n      emailViewData,\r\n      opendedEmailMeta,\r\n      updateEmailViewData,\r\n      moveOpenEmailToFolder,\r\n      updateOpenEmailLabel,\r\n      markOpenEmailAsUnread,\r\n      changeOpenedEmail,\r\n\r\n      // Search Query\r\n      searchQuery,\r\n      updateRouteQuery,\r\n\r\n      // UI Filters\r\n      filterTags,\r\n      formatDateToMonthShort,\r\n\r\n      // useEmail\r\n      resolveLabelColor,\r\n\r\n      // Compose\r\n      shallShowEmailComposeModal,\r\n\r\n      // Left Sidebar Responsiveness\r\n      mqShallShowLeftSidebar,\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n@import \"~@core/scss/base/pages/app-email.scss\";\r\n</style>\r\n"]}]}