{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\forms\\form-validation\\FormValidationPlaceholderArguments.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\forms\\form-validation\\FormValidationPlaceholderArguments.vue","mtime":1653043181442},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js","mtime":1653043263838},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js","mtime":1653043264822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQkNhcmRDb2RlIGZyb20gJ0Bjb3JlL2NvbXBvbmVudHMvYi1jYXJkLWNvZGUnDQppbXBvcnQgeyBWYWxpZGF0aW9uUHJvdmlkZXIsIFZhbGlkYXRpb25PYnNlcnZlciB9IGZyb20gJ3ZlZS12YWxpZGF0ZScNCmltcG9ydCB7DQogIEJGb3JtSW5wdXQsIEJGb3JtR3JvdXAsIEJGb3JtLCBCUm93LCBCQ29sLCBCQnV0dG9uLCBCQ2FyZFRleHQsDQp9IGZyb20gJ2Jvb3RzdHJhcC12dWUnDQppbXBvcnQgew0KICByZXF1aXJlZCwgbWluLCBjb25maXJtZWQsDQp9IGZyb20gJ0B2YWxpZGF0aW9ucycNCmltcG9ydCB7IGNvZGVQbGFjZWhvbGRlckFyZ3VtZW50IH0gZnJvbSAnLi9jb2RlJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGNvbXBvbmVudHM6IHsNCiAgICBCQ2FyZENvZGUsDQogICAgVmFsaWRhdGlvblByb3ZpZGVyLA0KICAgIFZhbGlkYXRpb25PYnNlcnZlciwNCiAgICBCQ2FyZFRleHQsDQogICAgQkZvcm1JbnB1dCwNCiAgICBCRm9ybUdyb3VwLA0KICAgIEJGb3JtLA0KICAgIEJSb3csDQogICAgQkNvbCwNCiAgICBCQnV0dG9uLA0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBwYXNzVmFsdWU6ICcnLA0KICAgICAgdXNlcm5hbWU6ICcnLA0KICAgICAgcmVxdWlyZWQsDQogICAgICBtaW4sDQogICAgICBjb25maXJtZWQsDQogICAgICBjb2RlUGxhY2Vob2xkZXJBcmd1bWVudCwNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICB2YWxpZGF0aW9uRm9ybSgpIHsNCiAgICAgIHRoaXMuJHJlZnMuc2ltcGxlUnVsZXMudmFsaWRhdGUoKS50aGVuKHN1Y2Nlc3MgPT4gew0KICAgICAgICBpZiAoc3VjY2Vzcykgew0KICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZQ0KICAgICAgICAgIGFsZXJ0KCdwYXNzd29yZCByZXNldCEnKQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgIH0sDQogIH0sDQp9DQo="},{"version":3,"sources":["FormValidationPlaceholderArguments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FormValidationPlaceholderArguments.vue","sourceRoot":"src/views/forms/form-validation","sourcesContent":["<template>\r\n  <b-card-code title=\"Arguments Placeholders\">\r\n    <b-card-text>vee-validate interpolation can parse placeholders that match the rule parameters, so to define such a message for the min rule you can use a {length} placeholder in the error message like this:</b-card-text>\r\n\r\n    <!-- form -->\r\n    <validation-observer ref=\"simpleRules\">\r\n      <b-form>\r\n        <b-row>\r\n\r\n          <!-- password -->\r\n          <b-col cols=\"12\">\r\n            <b-form-group\r\n              label=\"Password\"\r\n              label-for=\"a-password\"\r\n            >\r\n              <validation-provider\r\n                #default=\"{ errors }\"\r\n                name=\"Password\"\r\n                vid=\"Password\"\r\n                rules=\"required|min:8|password\"\r\n              >\r\n                <b-form-input\r\n                  id=\"a-password\"\r\n                  v-model=\"username\"\r\n                  :state=\"errors.length > 0 ? false:null\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n                <small class=\"text-danger\">{{ errors[0] }}</small>\r\n              </validation-provider>\r\n            </b-form-group>\r\n          </b-col>\r\n\r\n          <!-- confirm password -->\r\n          <b-col cols=\"12\">\r\n            <b-form-group\r\n              label=\"Confirm Password\"\r\n              label-for=\"ac-password\"\r\n            >\r\n              <validation-provider\r\n                #default=\"{ errors }\"\r\n                name=\"Confirm Password\"\r\n                rules=\"required|confirmed:Password\"\r\n              >\r\n\r\n                <b-form-input\r\n                  id=\"ac-password\"\r\n                  v-model=\"passValue\"\r\n                  :state=\"errors.length > 0 ? false:null\"\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                />\r\n                <small class=\"text-danger\">{{ errors[0] }}</small>\r\n              </validation-provider>\r\n            </b-form-group>\r\n          </b-col>\r\n\r\n          <!-- reset button -->\r\n          <b-col cols=\"12\">\r\n            <b-button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              @click.prevent=\"validationForm\"\r\n            >\r\n              Reset\r\n            </b-button>\r\n          </b-col>\r\n        </b-row>\r\n      </b-form>\r\n    </validation-observer>\r\n\r\n    <template #code>\r\n      {{ codePlaceholderArgument }}\r\n    </template>\r\n  </b-card-code>\r\n</template>\r\n\r\n<script>\r\nimport BCardCode from '@core/components/b-card-code'\r\nimport { ValidationProvider, ValidationObserver } from 'vee-validate'\r\nimport {\r\n  BFormInput, BFormGroup, BForm, BRow, BCol, BButton, BCardText,\r\n} from 'bootstrap-vue'\r\nimport {\r\n  required, min, confirmed,\r\n} from '@validations'\r\nimport { codePlaceholderArgument } from './code'\r\n\r\nexport default {\r\n  components: {\r\n    BCardCode,\r\n    ValidationProvider,\r\n    ValidationObserver,\r\n    BCardText,\r\n    BFormInput,\r\n    BFormGroup,\r\n    BForm,\r\n    BRow,\r\n    BCol,\r\n    BButton,\r\n  },\r\n  data() {\r\n    return {\r\n      passValue: '',\r\n      username: '',\r\n      required,\r\n      min,\r\n      confirmed,\r\n      codePlaceholderArgument,\r\n    }\r\n  },\r\n  methods: {\r\n    validationForm() {\r\n      this.$refs.simpleRules.validate().then(success => {\r\n        if (success) {\r\n          // eslint-disable-next-line\r\n          alert('password reset!')\r\n        }\r\n      })\r\n    },\r\n  },\r\n}\r\n</script>\r\n"]}]}