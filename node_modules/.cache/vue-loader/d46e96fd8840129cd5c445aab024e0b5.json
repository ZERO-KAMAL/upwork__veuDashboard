{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\charts-and-maps\\maps\\leaflet\\LeafletGeoJSON.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\charts-and-maps\\maps\\leaflet\\LeafletGeoJSON.vue","mtime":1653043180958},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js","mtime":1653043263838},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js","mtime":1653043264822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBMTWFwLCBMVGlsZUxheWVyLCBMR2VvSnNvbiB9IGZyb20gJ3Z1ZTItbGVhZmxldCcNCmltcG9ydCBCQ2FyZENvZGUgZnJvbSAnQC9AY29yZS9jb21wb25lbnRzL2ItY2FyZC1jb2RlL0JDYXJkQ29kZS52dWUnDQppbXBvcnQgeyBjb2RlR2VvSlNPTiB9IGZyb20gJy4vY29kZScNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBjb21wb25lbnRzOiB7DQogICAgTE1hcCwNCiAgICBMVGlsZUxheWVyLA0KICAgIExHZW9Kc29uLA0KICAgIEJDYXJkQ29kZSwNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgdXJsOiAnaHR0cHM6Ly97c30udGlsZS5vcGVuc3RyZWV0bWFwLm9yZy97en0ve3h9L3t5fS5wbmcnLA0KICAgICAgem9vbTogOCwNCiAgICAgIGNlbnRlcjogWzQ3LjMxMzIyMCwgLTEuMzE5NDgyXSwNCiAgICAgIGdlb2pzb246IG51bGwsDQogICAgICBjb2RlR2VvSlNPTiwNCiAgICB9DQogIH0sDQogIGFzeW5jIGNyZWF0ZWQoKSB7DQogICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9yYXdnaXQuY29tL2dyZWdvaXJlZGF2aWQvZnJhbmNlLWdlb2pzb24vbWFzdGVyL3JlZ2lvbnMvcGF5cy1kZS1sYS1sb2lyZS9jb21tdW5lcy1wYXlzLWRlLWxhLWxvaXJlLmdlb2pzb24nKQ0KICAgIHRoaXMuZ2VvanNvbiA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKQ0KICB9LA0KfQ0K"},{"version":3,"sources":["LeafletGeoJSON.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LeafletGeoJSON.vue","sourceRoot":"src/views/charts-and-maps/maps/leaflet","sourcesContent":["<template>\r\n  <b-card-code title=\"GeoJSON Map\">\r\n    <l-map\r\n      :zoom=\"zoom\"\r\n      :center=\"center\"\r\n    >\r\n      <l-tile-layer :url=\"url\" />\r\n      <l-geo-json :geojson=\"geojson\" />\r\n    </l-map>\r\n\r\n    <template #code>\r\n      {{ codeGeoJSON }}\r\n    </template>\r\n  </b-card-code>\r\n</template>\r\n\r\n<script>\r\nimport { LMap, LTileLayer, LGeoJson } from 'vue2-leaflet'\r\nimport BCardCode from '@/@core/components/b-card-code/BCardCode.vue'\r\nimport { codeGeoJSON } from './code'\r\n\r\nexport default {\r\n  components: {\r\n    LMap,\r\n    LTileLayer,\r\n    LGeoJson,\r\n    BCardCode,\r\n  },\r\n  data() {\r\n    return {\r\n      url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n      zoom: 8,\r\n      center: [47.313220, -1.319482],\r\n      geojson: null,\r\n      codeGeoJSON,\r\n    }\r\n  },\r\n  async created() {\r\n    const response = await fetch('https://rawgit.com/gregoiredavid/france-geojson/master/regions/pays-de-la-loire/communes-pays-de-la-loire.geojson')\r\n    this.geojson = await response.json()\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.vue2leaflet-map{\r\n  &.leaflet-container{\r\n    height: 350px;\r\n  }\r\n}\r\n</style>\r\n"]}]}