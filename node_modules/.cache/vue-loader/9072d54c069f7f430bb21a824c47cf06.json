{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\forms\\form-element\\form-checkbox\\FormCheckboxIndeterminate.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\forms\\form-element\\form-checkbox\\FormCheckboxIndeterminate.vue","mtime":1653043181296},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js","mtime":1653043263838},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js","mtime":1653043264822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQkNhcmRDb2RlIGZyb20gJ0Bjb3JlL2NvbXBvbmVudHMvYi1jYXJkLWNvZGUnDQppbXBvcnQgeyBCRm9ybUNoZWNrYm94LCBCQnV0dG9uLCBCQ2FyZFRleHQgfSBmcm9tICdib290c3RyYXAtdnVlJw0KaW1wb3J0IFJpcHBsZSBmcm9tICd2dWUtcmlwcGxlLWRpcmVjdGl2ZScNCmltcG9ydCB7IGNvZGVJbmRldGVybWluYXRlIH0gZnJvbSAnLi9jb2RlJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGNvbXBvbmVudHM6IHsNCiAgICBCRm9ybUNoZWNrYm94LA0KICAgIEJDYXJkQ29kZSwNCiAgICBCQnV0dG9uLA0KICAgIEJDYXJkVGV4dCwNCiAgfSwNCiAgZGlyZWN0aXZlczogew0KICAgIFJpcHBsZSwNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgY2hlY2tlZDogdHJ1ZSwNCiAgICAgIGluZGV0ZXJtaW5hdGU6IHRydWUsDQogICAgICBjb2RlSW5kZXRlcm1pbmF0ZSwNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICB0b2dnbGVJbmRldGVybWluYXRlKCkgew0KICAgICAgdGhpcy5pbmRldGVybWluYXRlID0gIXRoaXMuaW5kZXRlcm1pbmF0ZQ0KICAgIH0sDQogIH0sDQp9DQo="},{"version":3,"sources":["FormCheckboxIndeterminate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FormCheckboxIndeterminate.vue","sourceRoot":"src/views/forms/form-element/form-checkbox","sourcesContent":["<template>\r\n  <b-card-code title=\"Indeterminate (tri-state) support\">\r\n    <b-card-text>\r\n      <code>&lt;b-form-checkbox&gt;</code>\r\n      <span> supports setting this visual indeterminate state via the </span>\r\n      <code>indeterminate</code>\r\n      <span> prop (defaults to </span>\r\n      <code>false</code>\r\n      <span> ). Clicking the checkbox will clear its indeterminate state. The </span>\r\n      <code>indeterminate</code>\r\n      <span> prop can be synced to the checkbox's state by v-binding the </span>\r\n      <code>indeterminate</code>\r\n      <span> prop with the </span>\r\n      <code>.sync</code>\r\n      <span> modifier.</span>\r\n    </b-card-text>\r\n\r\n    <!-- checkbox -->\r\n    <b-form-checkbox\r\n      v-model=\"checked\"\r\n      :indeterminate.sync=\"indeterminate\"\r\n    >\r\n      Click me to see what happens\r\n    </b-form-checkbox>\r\n\r\n    <!-- button -->\r\n    <b-button\r\n      v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\r\n      class=\"mt-1\"\r\n      variant=\"outline-primary\"\r\n      @click=\"toggleIndeterminate\"\r\n    >\r\n      Toggle Indeterminate State\r\n    </b-button>\r\n\r\n    <div class=\"mt-1\">\r\n      Checked: <strong>{{ checked }}</strong><br>\r\n      Indeterminate: <strong>{{ indeterminate }}</strong>\r\n    </div>\r\n\r\n    <template #code>\r\n      {{ codeIndeterminate }}\r\n    </template>\r\n  </b-card-code>\r\n</template>\r\n\r\n<script>\r\nimport BCardCode from '@core/components/b-card-code'\r\nimport { BFormCheckbox, BButton, BCardText } from 'bootstrap-vue'\r\nimport Ripple from 'vue-ripple-directive'\r\nimport { codeIndeterminate } from './code'\r\n\r\nexport default {\r\n  components: {\r\n    BFormCheckbox,\r\n    BCardCode,\r\n    BButton,\r\n    BCardText,\r\n  },\r\n  directives: {\r\n    Ripple,\r\n  },\r\n  data() {\r\n    return {\r\n      checked: true,\r\n      indeterminate: true,\r\n      codeIndeterminate,\r\n    }\r\n  },\r\n  methods: {\r\n    toggleIndeterminate() {\r\n      this.indeterminate = !this.indeterminate\r\n    },\r\n  },\r\n}\r\n</script>\r\n"]}]}