{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\views\\apps\\e-commerce\\e-commerce-product-details\\ECommerceProductDetails.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\views\\apps\\e-commerce\\e-commerce-product-details\\ECommerceProductDetails.vue","mtime":1653043180864},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\css-loader\\dist\\cjs.js","mtime":1653043260894},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1653043267607},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\postcss-loader\\src\\index.js","mtime":1653043263711},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1653043258712},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js","mtime":1653043264822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KQGltcG9ydCAifkBjb3JlL3Njc3MvYmFzZS9wYWdlcy9hcHAtZWNvbW1lcmNlLWRldGFpbHMuc2NzcyI7DQo="},{"version":3,"sources":["ECommerceProductDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuQA","file":"ECommerceProductDetails.vue","sourceRoot":"src/views/apps/e-commerce/e-commerce-product-details","sourcesContent":["<template>\r\n  <section class=\"app-ecommerce-details\">\r\n\r\n    <!-- Alert: No item found -->\r\n    <b-alert\r\n      variant=\"danger\"\r\n      :show=\"product === undefined\"\r\n    >\r\n      <h4 class=\"alert-heading\">\r\n        Error fetching product data\r\n      </h4>\r\n      <div class=\"alert-body\">\r\n        No item found with this item slug. Check\r\n        <b-link\r\n          class=\"alert-link\"\r\n          :to=\"{ name: 'apps-e-commerce-shop'}\"\r\n        >\r\n          Shop\r\n        </b-link>\r\n        for other items.\r\n      </div>\r\n    </b-alert>\r\n\r\n    <!-- Content -->\r\n    <b-card\r\n      v-if=\"product\"\r\n      no-body\r\n    >\r\n      <b-card-body>\r\n        <b-row class=\"my-2\">\r\n\r\n          <!-- Left: Product Image Container -->\r\n          <b-col\r\n            cols=\"12\"\r\n            md=\"5\"\r\n            class=\"d-flex align-items-center justify-content-center mb-2 mb-md-0\"\r\n          >\r\n            <div class=\"d-flex align-items-center justify-content-center\">\r\n              <b-img\r\n                :src=\"product.image\"\r\n                :alt=\"`Image of ${product.name}`\"\r\n                class=\"product-img\"\r\n                fluid\r\n              />\r\n            </div>\r\n          </b-col>\r\n\r\n          <!-- Right: Product Details -->\r\n          <b-col\r\n            cols=\"12\"\r\n            md=\"7\"\r\n          >\r\n\r\n            <!-- Product Name -->\r\n            <h4>{{ product.name }}</h4>\r\n\r\n            <!-- Product Brand -->\r\n            <b-card-text class=\"item-company mb-0\">\r\n              <span>by</span>\r\n              <b-link class=\"company-name\">\r\n                {{ product.brand }}\r\n              </b-link>\r\n            </b-card-text>\r\n\r\n            <!-- Price And Ratings -->\r\n            <div class=\"ecommerce-details-price d-flex flex-wrap mt-1\">\r\n              <h4 class=\"item-price mr-1\">\r\n                ${{ product.price }}\r\n              </h4>\r\n              <ul class=\"unstyled-list list-inline pl-1 border-left\">\r\n                <li\r\n                  v-for=\"star in 5\"\r\n                  :key=\"star\"\r\n                  class=\"ratings-list-item mr-25\"\r\n                >\r\n                  <feather-icon\r\n                    icon=\"StarIcon\"\r\n                    size=\"18\"\r\n                    :class=\"[{'fill-current': star <= product.rating}, star <= product.rating ? 'text-warning' : 'text-muted']\"\r\n                  />\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            <!-- Avability -->\r\n            <b-card-text>Available - <span class=\"text-success\">In stock</span></b-card-text>\r\n\r\n            <!-- Product Description -->\r\n            <b-card-text>{{ product.description }}</b-card-text>\r\n\r\n            <!-- Product Meta [Free shpping, EMI, etc.] -->\r\n            <ul class=\"product-features list-unstyled\">\r\n              <li v-if=\"product.hasFreeShipping\">\r\n                <feather-icon icon=\"ShoppingCartIcon\" />\r\n                <span>Free Shipping</span></li>\r\n              <li>\r\n                <feather-icon icon=\"DollarSignIcon\" />\r\n                <span>EMI options available</span>\r\n              </li>\r\n            </ul>\r\n\r\n            <hr>\r\n\r\n            <!-- Colors -->\r\n            <div class=\"product-color-options\">\r\n              <h6>Colors</h6>\r\n              <ul class=\"list-unstyled mb-0\">\r\n                <li\r\n                  v-for=\"color in product.colorOptions\"\r\n                  :key=\"color\"\r\n                  class=\"d-inline-block\"\r\n                  :class=\"{'selected': selectedColor === color}\"\r\n                  @click=\"selectedColor = color\"\r\n                >\r\n                  <div\r\n                    class=\"color-option\"\r\n                    :class=\"`b-${color}`\"\r\n                  >\r\n                    <div\r\n                      class=\"filloption\"\r\n                      :class=\"`bg-${color}`\"\r\n                    />\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            <hr>\r\n\r\n            <div class=\"d-flex flex-column flex-sm-row pt-1\">\r\n              <b-button\r\n                v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\r\n                variant=\"primary\"\r\n                class=\"btn-cart mr-0 mr-sm-1 mb-1 mb-sm-0\"\r\n                @click=\"handleCartActionClick(product)\"\r\n              >\r\n                <feather-icon\r\n                  icon=\"ShoppingCartIcon\"\r\n                  class=\"mr-50\"\r\n                />\r\n                <span>{{ product.isInCart ? 'View In Cart' : 'Add to Cart' }}</span>\r\n              </b-button>\r\n              <b-button\r\n                variant=\"outline-secondary\"\r\n                class=\"btn-wishlist mr-0 mr-sm-1 mb-1 mb-sm-0\"\r\n                @click=\"toggleProductInWishlist(product)\"\r\n              >\r\n                <feather-icon\r\n                  icon=\"HeartIcon\"\r\n                  class=\"mr-50\"\r\n                  :class=\"{'text-danger': product.isInWishlist}\"\r\n                />\r\n                <span>Wishlist</span>\r\n              </b-button>\r\n              <b-dropdown\r\n                variant=\"outline-secondary\"\r\n                no-caret\r\n                toggle-class=\"btn-icon\"\r\n                class=\"btn-share\"\r\n                right\r\n              >\r\n                <template #button-content>\r\n                  <feather-icon icon=\"Share2Icon\" />\r\n                </template>\r\n                <b-dropdown-item\r\n                  v-for=\"icon in [ 'FacebookIcon', 'TwitterIcon', 'YoutubeIcon', 'InstagramIcon', ]\"\r\n                  :key=\"icon\"\r\n                >\r\n                  <feather-icon :icon=\"icon\" />\r\n                </b-dropdown-item>\r\n              </b-dropdown>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n      </b-card-body>\r\n\r\n      <!-- Static Content -->\r\n      <e-commerce-product-details-item-features />\r\n\r\n      <!-- Static Content -->\r\n      <!-- Slider: Related Products -->\r\n      <e-commerce-product-details-related-products />\r\n    </b-card>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport { useRouter } from '@core/utils/utils'\r\nimport store from '@/store'\r\nimport { ref } from '@vue/composition-api'\r\nimport {\r\n  BCard, BCardBody, BRow, BCol, BImg, BCardText, BLink, BButton, BDropdown, BDropdownItem, BAlert,\r\n} from 'bootstrap-vue'\r\nimport Ripple from 'vue-ripple-directive'\r\nimport ECommerceProductDetailsItemFeatures from './ECommerceProductDetailsItemFeatures.vue'\r\nimport ECommerceProductDetailsRelatedProducts from './ECommerceProductDetailsRelatedProducts.vue'\r\nimport { useEcommerceUi } from '../useEcommerce'\r\n\r\nexport default {\r\n  directives: {\r\n    Ripple,\r\n  },\r\n  components: {\r\n    // BSV\r\n    BCard,\r\n    BCardBody,\r\n    BRow,\r\n    BCol,\r\n    BImg,\r\n    BCardText,\r\n    BLink,\r\n    BButton,\r\n    BDropdown,\r\n    BDropdownItem,\r\n    BAlert,\r\n\r\n    // SFC\r\n    ECommerceProductDetailsItemFeatures,\r\n    ECommerceProductDetailsRelatedProducts,\r\n  },\r\n  setup() {\r\n    const { handleCartActionClick, toggleProductInWishlist } = useEcommerceUi()\r\n\r\n    const product = ref(null)\r\n\r\n    // Remote Data\r\n    const fetchProduct = () => {\r\n      // Get product  id from URL\r\n      const { route } = useRouter()\r\n      const productSlug = route.value.params.slug\r\n      const productId = productSlug.substring(productSlug.lastIndexOf('-') + 1)\r\n\r\n      store.dispatch('app-ecommerce/fetchProduct', { productId })\r\n        .then(response => {\r\n          product.value = response.data.product\r\n        })\r\n        .catch(error => {\r\n          if (error.response.status === 404) {\r\n            product.value = undefined\r\n          }\r\n        })\r\n    }\r\n\r\n    // UI\r\n    const selectedColor = ref(null)\r\n\r\n    fetchProduct()\r\n\r\n    return {\r\n\r\n      // Fetched Product\r\n      product,\r\n\r\n      // UI\r\n      selectedColor,\r\n      handleCartActionClick,\r\n      toggleProductInWishlist,\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"~@core/scss/base/pages/app-ecommerce-details.scss\";\r\n</style>\r\n"]}]}