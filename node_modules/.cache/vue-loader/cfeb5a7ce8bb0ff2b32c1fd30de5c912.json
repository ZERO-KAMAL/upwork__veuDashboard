{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\views\\components\\overlay\\OverlayForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\views\\components\\overlay\\OverlayForm.vue","mtime":1653043181081},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js","mtime":1653043263838},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js","mtime":1653043264822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQkNhcmRDb2RlIGZyb20gJ0Bjb3JlL2NvbXBvbmVudHMvYi1jYXJkLWNvZGUnDQppbXBvcnQgew0KICBCQnV0dG9uLA0KICBCT3ZlcmxheSwNCiAgQkZvcm0sDQogIEJQcm9ncmVzcywNCiAgQkZvcm1Hcm91cCwNCiAgQklucHV0R3JvdXAsDQogIEJJbnB1dEdyb3VwUHJlcGVuZCwNCiAgQkZvcm1JbnB1dCwNCiAgQkZvcm1GaWxlLA0KICBCQ2FyZFRleHQsDQp9IGZyb20gJ2Jvb3RzdHJhcC12dWUnDQppbXBvcnQgUmlwcGxlIGZyb20gJ3Z1ZS1yaXBwbGUtZGlyZWN0aXZlJw0KaW1wb3J0IHsgY29kZUZvcm0gfSBmcm9tICcuL2NvZGUnDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgY29tcG9uZW50czogew0KICAgIEJCdXR0b24sDQogICAgQk92ZXJsYXksDQogICAgQkZvcm0sDQogICAgQlByb2dyZXNzLA0KICAgIEJGb3JtR3JvdXAsDQogICAgQklucHV0R3JvdXAsDQogICAgQkNhcmRDb2RlLA0KICAgIEJJbnB1dEdyb3VwUHJlcGVuZCwNCiAgICBCRm9ybUlucHV0LA0KICAgIEJGb3JtRmlsZSwNCiAgICBCQ2FyZFRleHQsDQogIH0sDQogIGRpcmVjdGl2ZXM6IHsNCiAgICBSaXBwbGUsDQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGJ1c3k6IGZhbHNlLA0KICAgICAgcHJvY2Vzc2luZzogZmFsc2UsDQogICAgICBjb3VudGVyOiAxLA0KICAgICAgaW50ZXJ2YWw6IG51bGwsDQogICAgICBjb2RlRm9ybSwNCiAgICB9DQogIH0sDQogIGJlZm9yZURlc3Ryb3koKSB7DQogICAgdGhpcy5jbGVhckludGVydmFsKCkNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGNsZWFySW50ZXJ2YWwoKSB7DQogICAgICBpZiAodGhpcy5pbnRlcnZhbCkgew0KICAgICAgICBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpDQogICAgICAgIHRoaXMuaW50ZXJ2YWwgPSBudWxsDQogICAgICB9DQogICAgfSwNCiAgICBvblNob3duKCkgew0KICAgICAgLy8gRm9jdXMgdGhlIGRpYWxvZyBwcm9tcHQNCiAgICAgIHRoaXMuJHJlZnMuZGlhbG9nLmZvY3VzKCkNCiAgICB9LA0KICAgIG9uSGlkZGVuKCkgew0KICAgICAgLy8gSW4gdGhpcyBjYXNlLCB3ZSByZXR1cm4gZm9jdXMgdG8gdGhlIHN1Ym1pdCBidXR0b24NCiAgICAgIC8vIFlvdSBtYXkgbmVlZCB0byBhbHRlciB0aGlzIGJhc2VkIG9uIHlvdXIgYXBwbGljYXRpb24gcmVxdWlyZW1lbnRzDQogICAgICB0aGlzLiRyZWZzLnN1Ym1pdC5mb2N1cygpDQogICAgfSwNCiAgICBvblN1Ym1pdCgpIHsNCiAgICAgIHRoaXMucHJvY2Vzc2luZyA9IGZhbHNlDQogICAgICB0aGlzLmJ1c3kgPSB0cnVlDQogICAgfSwNCiAgICBvbkNhbmNlbCgpIHsNCiAgICAgIHRoaXMuYnVzeSA9IGZhbHNlDQogICAgfSwNCiAgICBvbk9LKCkgew0KICAgICAgdGhpcy5jb3VudGVyID0gMQ0KICAgICAgdGhpcy5wcm9jZXNzaW5nID0gdHJ1ZQ0KICAgICAgLy8gU2ltdWxhdGUgYW4gYXN5bmMgcmVxdWVzdA0KICAgICAgdGhpcy5jbGVhckludGVydmFsKCkNCiAgICAgIHRoaXMuaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB7DQogICAgICAgIGlmICh0aGlzLmNvdW50ZXIgPCAyMCkgew0KICAgICAgICAgIHRoaXMuY291bnRlciArPSAxDQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgdGhpcy5jbGVhckludGVydmFsKCkNCiAgICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7DQogICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUNCiAgICAgICAgICAgIHRoaXMuYnVzeSA9IHRoaXMucHJvY2Vzc2luZyA9IGZhbHNlDQogICAgICAgICAgfSkNCiAgICAgICAgfQ0KICAgICAgfSwgMzUwKQ0KICAgIH0sDQogIH0sDQp9DQo="},{"version":3,"sources":["OverlayForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"OverlayForm.vue","sourceRoot":"src/views/components/overlay","sourcesContent":["<template>\r\n  <b-card-code title=\"Form confirmation prompt and upload status\">\r\n    <b-card-text>\r\n      <span>This example is a bit more complex, but shows the use of </span>\r\n      <code>no-wrap</code>\r\n      <span> , and using the </span>\r\n      <code>overlay</code>\r\n      <span> slot to present the user with a prompt dialog, and once confirmed it shows a uploading status indicator. This\r\n        example also demonstrates additional accessibility markup.\r\n      </span>\r\n    </b-card-text>\r\n\r\n    <div>\r\n      <b-form\r\n        class=\"position-relative\"\r\n        @submit.prevent=\"onSubmit\"\r\n      >\r\n        <b-form-group\r\n          label=\"Name\"\r\n          label-for=\"form-name\"\r\n          label-cols-lg=\"2\"\r\n        >\r\n          <b-input-group>\r\n            <b-input-group-prepend is-text>\r\n              <feather-icon\r\n                icon=\"UserIcon\"\r\n              />\r\n            </b-input-group-prepend>\r\n            <b-form-input\r\n              id=\"form-name\"\r\n              :disabled=\"busy\"\r\n            />\r\n          </b-input-group>\r\n        </b-form-group>\r\n        <b-form-group\r\n          label=\"Email\"\r\n          label-for=\"form-mail\"\r\n          label-cols-lg=\"2\"\r\n        >\r\n          <b-input-group>\r\n            <b-input-group-prepend is-text>\r\n              <feather-icon icon=\"MailIcon\" />\r\n            </b-input-group-prepend>\r\n            <b-form-input\r\n              id=\"form-email\"\r\n              type=\"email\"\r\n              :disabled=\"busy\"\r\n            />\r\n          </b-input-group>\r\n        </b-form-group>\r\n        <b-form-group\r\n          label=\"Image\"\r\n          label-for=\"form-image\"\r\n          label-cols-lg=\"2\"\r\n        >\r\n          <b-input-group>\r\n            <b-input-group-prepend is-text>\r\n              <feather-icon icon=\"ImageIcon\" />\r\n            </b-input-group-prepend>\r\n            <b-form-file\r\n              id=\"form-image\"\r\n              :disabled=\"busy\"\r\n              accept=\"image/*\"\r\n            />\r\n          </b-input-group>\r\n        </b-form-group>\r\n        <div class=\"d-flex justify-content-center\">\r\n          <b-button\r\n            ref=\"submit\"\r\n            v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            :disabled=\"busy\"\r\n          >\r\n            Submit\r\n          </b-button>\r\n        </div>\r\n\r\n        <b-overlay\r\n          :show=\"busy\"\r\n          no-wrap\r\n          @shown=\"onShown\"\r\n          @hidden=\"onHidden\"\r\n        >\r\n          <template #overlay>\r\n            <div\r\n              v-if=\"processing\"\r\n              class=\"text-center p-3 bg-primary text-light rounded\"\r\n            >\r\n              <feather-icon\r\n                icon=\"UploadCloudIcon\"\r\n                size=\"20\"\r\n              />\r\n              <div class=\"mb-2\">\r\n                Processing...\r\n              </div>\r\n              <b-progress\r\n                min=\"1\"\r\n                max=\"20\"\r\n                :value=\"counter\"\r\n                variant=\"success\"\r\n                height=\"6px\"\r\n                class=\"mx-n3\"\r\n              />\r\n            </div>\r\n            <div\r\n              v-else\r\n              ref=\"dialog\"\r\n              tabindex=\"-1\"\r\n              role=\"dialog\"\r\n              aria-modal=\"false\"\r\n              aria-labelledby=\"form-confirm-label\"\r\n              class=\"text-center p-3\"\r\n            >\r\n              <b-card-text class=\"font-weight-bolder\">\r\n                Are you sure?\r\n              </b-card-text>\r\n              <div class=\"d-flex\">\r\n                <b-button\r\n                  v-ripple.400=\"'rgba(234, 84, 85, 0.15)'\"\r\n                  variant=\"outline-danger\"\r\n                  class=\"mr-3\"\r\n                  @click=\"onCancel\"\r\n                >\r\n                  Cancel\r\n                </b-button>\r\n                <b-button\r\n                  v-ripple.400=\"'rgba(40, 199, 111, 0.15)'\"\r\n                  variant=\"outline-success\"\r\n                  @click=\"onOK\"\r\n                >\r\n                  OK\r\n                </b-button>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </b-overlay>\r\n      </b-form>\r\n    </div>\r\n\r\n    <template #code>\r\n      {{ codeForm }}\r\n    </template>\r\n  </b-card-code>\r\n</template>\r\n\r\n<script>\r\nimport BCardCode from '@core/components/b-card-code'\r\nimport {\r\n  BButton,\r\n  BOverlay,\r\n  BForm,\r\n  BProgress,\r\n  BFormGroup,\r\n  BInputGroup,\r\n  BInputGroupPrepend,\r\n  BFormInput,\r\n  BFormFile,\r\n  BCardText,\r\n} from 'bootstrap-vue'\r\nimport Ripple from 'vue-ripple-directive'\r\nimport { codeForm } from './code'\r\n\r\nexport default {\r\n  components: {\r\n    BButton,\r\n    BOverlay,\r\n    BForm,\r\n    BProgress,\r\n    BFormGroup,\r\n    BInputGroup,\r\n    BCardCode,\r\n    BInputGroupPrepend,\r\n    BFormInput,\r\n    BFormFile,\r\n    BCardText,\r\n  },\r\n  directives: {\r\n    Ripple,\r\n  },\r\n  data() {\r\n    return {\r\n      busy: false,\r\n      processing: false,\r\n      counter: 1,\r\n      interval: null,\r\n      codeForm,\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    this.clearInterval()\r\n  },\r\n  methods: {\r\n    clearInterval() {\r\n      if (this.interval) {\r\n        clearInterval(this.interval)\r\n        this.interval = null\r\n      }\r\n    },\r\n    onShown() {\r\n      // Focus the dialog prompt\r\n      this.$refs.dialog.focus()\r\n    },\r\n    onHidden() {\r\n      // In this case, we return focus to the submit button\r\n      // You may need to alter this based on your application requirements\r\n      this.$refs.submit.focus()\r\n    },\r\n    onSubmit() {\r\n      this.processing = false\r\n      this.busy = true\r\n    },\r\n    onCancel() {\r\n      this.busy = false\r\n    },\r\n    onOK() {\r\n      this.counter = 1\r\n      this.processing = true\r\n      // Simulate an async request\r\n      this.clearInterval()\r\n      this.interval = setInterval(() => {\r\n        if (this.counter < 20) {\r\n          this.counter += 1\r\n        } else {\r\n          this.clearInterval()\r\n          this.$nextTick(() => {\r\n            // eslint-disable-next-line\r\n            this.busy = this.processing = false\r\n          })\r\n        }\r\n      }, 350)\r\n    },\r\n  },\r\n}\r\n</script>\r\n"]}]}