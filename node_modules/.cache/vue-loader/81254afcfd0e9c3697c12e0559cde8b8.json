{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\dashboard\\admin-modules\\users-list\\UsersListFilters.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\dashboard\\admin-modules\\users-list\\UsersListFilters.vue","mtime":1653043181186},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\css-loader\\dist\\cjs.js","mtime":1653043260894},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1653043267607},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\postcss-loader\\src\\index.js","mtime":1653043263711},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1653043258712},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js","mtime":1653043264822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCkBpbXBvcnQgJ0Bjb3JlL3Njc3MvdnVlL2xpYnMvdnVlLXNlbGVjdC5zY3NzJzsNCg=="},{"version":3,"sources":["UsersListFilters.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA","file":"UsersListFilters.vue","sourceRoot":"src/views/dashboard/admin-modules/users-list","sourcesContent":["<template>\r\n  <b-card no-body>\r\n    <b-card-header class=\"pb-50\">\r\n      <h5>\r\n        Filters\r\n      </h5>\r\n    </b-card-header>\r\n    <b-card-body>\r\n      <b-row>\r\n        <b-col\r\n          cols=\"12\"\r\n          md=\"4\"\r\n          class=\"mb-md-0 mb-2\"\r\n        >\r\n          <label>User Type</label>\r\n          <v-select\r\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\r\n            :value=\"roleFilter\"\r\n            :options=\"roleOptions\"\r\n            class=\"w-100\"\r\n            :reduce=\"val => val.value\"\r\n            @input=\"(val) => $emit('update:roleFilter', val)\"\r\n          />\r\n        </b-col>\r\n        <b-col\r\n          cols=\"12\"\r\n          md=\"4\"\r\n          class=\"mb-md-0 mb-2\"\r\n        >\r\n          <label>Status</label>\r\n          <v-select\r\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\r\n            :value=\"statusFilter\"\r\n            :options=\"statusOptions\"\r\n            class=\"w-100\"\r\n            :reduce=\"val => val.value\"\r\n            @input=\"(val) => $emit('update:statusFilter', val)\"\r\n          />\r\n        </b-col>\r\n        <b-col\r\n          cols=\"12\"\r\n          md=\"4\"\r\n          class=\"mb-md-0 mb-2\"\r\n        >\r\n          <label>Brokerage</label>\r\n          <b-form-input\r\n            :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\r\n            class=\"w-100\"\r\n            :reduce=\"val => val.value\"\r\n            @input=\"onBrokage\"\r\n          />\r\n        </b-col>\r\n      </b-row>\r\n    </b-card-body>\r\n  </b-card>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  BCard, BCardHeader, BCardBody, BRow, BCol, BFormInput,\r\n} from 'bootstrap-vue'\r\nimport vSelect from 'vue-select'\r\n\r\nexport default {\r\n  components: {\r\n    BRow,\r\n    BCol,\r\n    BCard,\r\n    BCardHeader,\r\n    BFormInput,\r\n    BCardBody,\r\n    vSelect,\r\n  },\r\n  props: {\r\n    roleFilter: {\r\n      type: [Number, null],\r\n      default: null,\r\n    },\r\n    brokageFilter: {\r\n      type: [String, null],\r\n      default: null,\r\n    },\r\n    statusFilter: {\r\n      type: [Number, null],\r\n      default: null,\r\n    },\r\n    roleOptions: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n    statusOptions: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      timeout: null,\r\n    }\r\n  },\r\n  methods: {\r\n    onBrokage(val) {\r\n      clearTimeout(this.timeout)\r\n      this.timeout = setTimeout(() => {\r\n        if (val.trim().length > 0) {\r\n          this.$emit('update:brokageFilter', val)\r\n        }\r\n      }, 1000)\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '@core/scss/vue/libs/vue-select.scss';\r\n</style>\r\n"]}]}