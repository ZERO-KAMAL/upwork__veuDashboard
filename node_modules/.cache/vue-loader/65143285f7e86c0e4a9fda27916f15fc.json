{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\views\\forms\\form-element\\form-tag\\FormTagsNativeInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\views\\forms\\form-element\\form-tag\\FormTagsNativeInput.vue","mtime":1653043181389},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js","mtime":1653043263838},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js","mtime":1653043264822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQkNhcmRDb2RlIGZyb20gJ0Bjb3JlL2NvbXBvbmVudHMvYi1jYXJkLWNvZGUnDQppbXBvcnQgew0KICBCRm9ybVRhZ3MsIEJJbnB1dEdyb3VwLCBCSW5wdXRHcm91cEFwcGVuZCwgQkNhcmQsIEJCdXR0b24sIEJDYXJkVGV4dCwNCn0gZnJvbSAnYm9vdHN0cmFwLXZ1ZScNCmltcG9ydCB7IGNvZGVOYXRpdmVJbnB1dCB9IGZyb20gJy4vY29kZScNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBjb21wb25lbnRzOiB7DQogICAgQkNhcmRDb2RlLA0KICAgIEJGb3JtVGFncywNCiAgICBCSW5wdXRHcm91cCwNCiAgICBCQ2FyZCwNCiAgICBCQnV0dG9uLA0KICAgIEJDYXJkVGV4dCwNCiAgICBCSW5wdXRHcm91cEFwcGVuZCwNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgdmFsdWU6IFsnYXBwbGUnLCAnb3JhbmdlJywgJ2JhbmFuYScsICdwZWFyJywgJ3BlYWNoJ10sDQogICAgICBjb2RlTmF0aXZlSW5wdXQsDQogICAgfQ0KICB9LA0KfQ0K"},{"version":3,"sources":["FormTagsNativeInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FormTagsNativeInput.vue","sourceRoot":"src/views/forms/form-element/form-tag","sourcesContent":["<template>\r\n  <b-card-code\r\n    title=\"Using native browser inputs\"\r\n  >\r\n    <b-card-text>\r\n      <span>The scope contains attributes and event handlers that can be directly bound to native </span>\r\n      <code>&lt;input&gt;</code>\r\n      <span> or </span>\r\n      <code>&lt;select&gt;</code>\r\n      <span> elements.</span>\r\n    </b-card-text>\r\n\r\n    <div>\r\n      <b-form-tags\r\n        v-model=\"value\"\r\n        no-outer-focus\r\n      >\r\n        <template #default=\"{ tags, inputAttrs, inputHandlers, addTag, removeTag }\">\r\n          <b-input-group aria-controls=\"my-custom-tags-list\">\r\n            <input\r\n              v-bind=\"inputAttrs\"\r\n              placeholder=\"New tag - Press enter to add\"\r\n              class=\"form-control\"\r\n              v-on=\"inputHandlers\"\r\n            >\r\n            <b-input-group-append>\r\n              <b-button\r\n                variant=\"primary\"\r\n                @click=\"addTag()\"\r\n              >\r\n                Add\r\n              </b-button>\r\n            </b-input-group-append>\r\n          </b-input-group>\r\n          <ul\r\n            id=\"my-custom-tags-list\"\r\n            class=\"list-unstyled d-inline-flex flex-wrap mb-0\"\r\n            aria-live=\"polite\"\r\n            aria-atomic=\"false\"\r\n            aria-relevant=\"additions removals\"\r\n          >\r\n\r\n            <!-- Always use the tag value as the :key, not the index! -->\r\n            <!-- Otherwise screen readers will not read the tag\r\n               additions and removals correctly -->\r\n            <b-card\r\n              v-for=\"tag in tags\"\r\n              :id=\"`my-custom-tags-tag_${tag.replace(/\\s/g, '_')}_`\"\r\n              :key=\"tag\"\r\n              tag=\"li\"\r\n              class=\"shadow-none border mt-1 mr-1 mb-0\"\r\n              body-class=\"py-1 pr-2 text-nowrap\"\r\n            >\r\n              <strong>{{ tag }}</strong>\r\n              <b-button\r\n                variant=\"link\"\r\n                size=\"sm\"\r\n                :aria-controls=\"`my-custom-tags-tag_${tag.replace(/\\s/g, '_')}_`\"\r\n                class=\"py-0\"\r\n                @click=\"removeTag(tag)\"\r\n              >\r\n                remove\r\n              </b-button>\r\n            </b-card>\r\n          </ul>\r\n        </template>\r\n      </b-form-tags>\r\n    </div>\r\n\r\n    <template #code>\r\n      {{ codeNativeInput }}\r\n    </template>\r\n  </b-card-code>\r\n</template>\r\n\r\n<script>\r\nimport BCardCode from '@core/components/b-card-code'\r\nimport {\r\n  BFormTags, BInputGroup, BInputGroupAppend, BCard, BButton, BCardText,\r\n} from 'bootstrap-vue'\r\nimport { codeNativeInput } from './code'\r\n\r\nexport default {\r\n  components: {\r\n    BCardCode,\r\n    BFormTags,\r\n    BInputGroup,\r\n    BCard,\r\n    BButton,\r\n    BCardText,\r\n    BInputGroupAppend,\r\n  },\r\n  data() {\r\n    return {\r\n      value: ['apple', 'orange', 'banana', 'pear', 'peach'],\r\n      codeNativeInput,\r\n    }\r\n  },\r\n}\r\n</script>\r\n"]}]}