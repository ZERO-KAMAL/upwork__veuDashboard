{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\views\\dashboard\\admin-modules\\AdminModules.vue?vue&type=template&id=84689cda&scoped=true&","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\views\\dashboard\\admin-modules\\AdminModules.vue","mtime":1653043181166},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1653043267914},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js","mtime":1653043264822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}