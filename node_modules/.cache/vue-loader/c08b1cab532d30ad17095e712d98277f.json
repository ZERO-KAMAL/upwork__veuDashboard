{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\components\\toasts\\ToastsVariants.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\components\\toasts\\ToastsVariants.vue","mtime":1653043181158},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js","mtime":1653043263838},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js","mtime":1653043264822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQkNhcmRDb2RlIGZyb20gJ0Bjb3JlL2NvbXBvbmVudHMvYi1jYXJkLWNvZGUnDQppbXBvcnQgeyBCQnV0dG9uLCBCQ2FyZFRleHQgfSBmcm9tICdib290c3RyYXAtdnVlJw0KaW1wb3J0IFJpcHBsZSBmcm9tICd2dWUtcmlwcGxlLWRpcmVjdGl2ZScNCmltcG9ydCB7IGNvZGVWYXJpYW50IH0gZnJvbSAnLi9jb2RlJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGNvbXBvbmVudHM6IHsNCiAgICBCQ2FyZENvZGUsDQogICAgQkJ1dHRvbiwNCiAgICBCQ2FyZFRleHQsDQogIH0sDQogIGRpcmVjdGl2ZXM6IHsNCiAgICBSaXBwbGUsDQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGNvZGVWYXJpYW50LA0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIG1ha2VUb2FzdCh2YXJpYW50ID0gbnVsbCkgew0KICAgICAgdGhpcy4kYnZUb2FzdC50b2FzdCgnVG9hc3QgYm9keSBjb250ZW50Jywgew0KICAgICAgICB0aXRsZTogYFZhcmlhbnQgJHt2YXJpYW50IHx8ICdkZWZhdWx0J31gLA0KICAgICAgICB2YXJpYW50LA0KICAgICAgICBzb2xpZDogZmFsc2UsDQogICAgICB9KQ0KICAgIH0sDQogIH0sDQp9DQo="},{"version":3,"sources":["ToastsVariants.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ToastsVariants.vue","sourceRoot":"src/views/components/toasts","sourcesContent":["<template>\r\n  <b-card-code title=\"Variants\">\r\n    <b-card-text class=\"mb-0\">\r\n      BootstrapVue toasts provide custom CSS to define color variants. Variants follow the standard Bootstrap v4 variant\r\n      names. If you have custom SCSS defined Bootstrap color theme variants, the toast custom SCSS will automatically\r\n      create toast variants for you (refer to the Theming reference section).\r\n    </b-card-text>\r\n\r\n    <div class=\"demo-inline-spacing\">\r\n\r\n      <!-- default -->\r\n      <b-button\r\n        variant=\"gradient-primary\"\r\n        @click=\"makeToast()\"\r\n      >\r\n        Default\r\n      </b-button>\r\n\r\n      <!-- primary -->\r\n      <b-button\r\n        v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\r\n        variant=\"outline-primary\"\r\n        @click=\"makeToast('primary')\"\r\n      >\r\n        Primary\r\n      </b-button>\r\n\r\n      <!-- secondary -->\r\n      <b-button\r\n        v-ripple.400=\"'rgba(186, 191, 199, 0.15)'\"\r\n        variant=\"outline-secondary\"\r\n        @click=\"makeToast('secondary')\"\r\n      >\r\n        Secondary\r\n      </b-button>\r\n\r\n      <!-- warning -->\r\n      <b-button\r\n        v-ripple.400=\"'rgba(255, 159, 67, 0.15)'\"\r\n        variant=\"outline-warning\"\r\n        @click=\"makeToast('warning')\"\r\n      >\r\n        Warning\r\n      </b-button>\r\n\r\n      <!-- danger -->\r\n      <b-button\r\n        v-ripple.400=\"'rgba(255, 159, 67, 0.15)'\"\r\n        variant=\"outline-danger\"\r\n        @click=\"makeToast('danger')\"\r\n      >\r\n        Danger\r\n      </b-button>\r\n\r\n      <!-- success -->\r\n      <b-button\r\n        v-ripple.400=\"'rgba(40, 199, 111, 0.15)'\"\r\n        variant=\"outline-success\"\r\n        @click=\"makeToast('success')\"\r\n      >\r\n        Success\r\n      </b-button>\r\n\r\n      <!-- info -->\r\n      <b-button\r\n        v-ripple.400=\"'rgba(0, 207, 232, 0.15)'\"\r\n        variant=\"outline-info\"\r\n        @click=\"makeToast('info')\"\r\n      >\r\n        Info\r\n      </b-button>\r\n    </div>\r\n\r\n    <template #code>\r\n      {{ codeVariant }}\r\n    </template>\r\n  </b-card-code>\r\n</template>\r\n\r\n<script>\r\nimport BCardCode from '@core/components/b-card-code'\r\nimport { BButton, BCardText } from 'bootstrap-vue'\r\nimport Ripple from 'vue-ripple-directive'\r\nimport { codeVariant } from './code'\r\n\r\nexport default {\r\n  components: {\r\n    BCardCode,\r\n    BButton,\r\n    BCardText,\r\n  },\r\n  directives: {\r\n    Ripple,\r\n  },\r\n  data() {\r\n    return {\r\n      codeVariant,\r\n    }\r\n  },\r\n  methods: {\r\n    makeToast(variant = null) {\r\n      this.$bvToast.toast('Toast body content', {\r\n        title: `Variant ${variant || 'default'}`,\r\n        variant,\r\n        solid: false,\r\n      })\r\n    },\r\n  },\r\n}\r\n</script>\r\n"]}]}