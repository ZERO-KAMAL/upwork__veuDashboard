{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\views\\components\\toasts\\ToastsVariants.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\views\\components\\toasts\\ToastsVariants.vue","mtime":1653043181158},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\babel.config.js","mtime":1653043180287},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js","mtime":1653043263838},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js","mtime":1653043264822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEJDYXJkQ29kZSBmcm9tICdAY29yZS9jb21wb25lbnRzL2ItY2FyZC1jb2RlJzsKaW1wb3J0IHsgQkJ1dHRvbiwgQkNhcmRUZXh0IH0gZnJvbSAnYm9vdHN0cmFwLXZ1ZSc7CmltcG9ydCBSaXBwbGUgZnJvbSAndnVlLXJpcHBsZS1kaXJlY3RpdmUnOwppbXBvcnQgeyBjb2RlVmFyaWFudCB9IGZyb20gJy4vY29kZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBCQ2FyZENvZGU6IEJDYXJkQ29kZSwKICAgIEJCdXR0b246IEJCdXR0b24sCiAgICBCQ2FyZFRleHQ6IEJDYXJkVGV4dAogIH0sCiAgZGlyZWN0aXZlczogewogICAgUmlwcGxlOiBSaXBwbGUKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb2RlVmFyaWFudDogY29kZVZhcmlhbnQKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBtYWtlVG9hc3Q6IGZ1bmN0aW9uIG1ha2VUb2FzdCgpIHsKICAgICAgdmFyIHZhcmlhbnQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IG51bGw7CiAgICAgIHRoaXMuJGJ2VG9hc3QudG9hc3QoJ1RvYXN0IGJvZHkgY29udGVudCcsIHsKICAgICAgICB0aXRsZTogIlZhcmlhbnQgIi5jb25jYXQodmFyaWFudCB8fCAnZGVmYXVsdCcpLAogICAgICAgIHZhcmlhbnQ6IHZhcmlhbnQsCiAgICAgICAgc29saWQ6IGZhbHNlCiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["ToastsVariants.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA,OAAA,SAAA,MAAA,8BAAA;AACA,SAAA,OAAA,EAAA,SAAA,QAAA,eAAA;AACA,OAAA,MAAA,MAAA,sBAAA;AACA,SAAA,WAAA,QAAA,QAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,OAAA,EAAA,OAFA;AAGA,IAAA,SAAA,EAAA;AAHA,GADA;AAMA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GANA;AASA,EAAA,IATA,kBASA;AACA,WAAA;AACA,MAAA,WAAA,EAAA;AADA,KAAA;AAGA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA,UAAA,OAAA,uEAAA,IAAA;AACA,WAAA,QAAA,CAAA,KAAA,CAAA,oBAAA,EAAA;AACA,QAAA,KAAA,oBAAA,OAAA,IAAA,SAAA,CADA;AAEA,QAAA,OAAA,EAAA,OAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAAA;AAKA;AAPA;AAdA,CAAA","sourcesContent":["<template>\r\n  <b-card-code title=\"Variants\">\r\n    <b-card-text class=\"mb-0\">\r\n      BootstrapVue toasts provide custom CSS to define color variants. Variants follow the standard Bootstrap v4 variant\r\n      names. If you have custom SCSS defined Bootstrap color theme variants, the toast custom SCSS will automatically\r\n      create toast variants for you (refer to the Theming reference section).\r\n    </b-card-text>\r\n\r\n    <div class=\"demo-inline-spacing\">\r\n\r\n      <!-- default -->\r\n      <b-button\r\n        variant=\"gradient-primary\"\r\n        @click=\"makeToast()\"\r\n      >\r\n        Default\r\n      </b-button>\r\n\r\n      <!-- primary -->\r\n      <b-button\r\n        v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\r\n        variant=\"outline-primary\"\r\n        @click=\"makeToast('primary')\"\r\n      >\r\n        Primary\r\n      </b-button>\r\n\r\n      <!-- secondary -->\r\n      <b-button\r\n        v-ripple.400=\"'rgba(186, 191, 199, 0.15)'\"\r\n        variant=\"outline-secondary\"\r\n        @click=\"makeToast('secondary')\"\r\n      >\r\n        Secondary\r\n      </b-button>\r\n\r\n      <!-- warning -->\r\n      <b-button\r\n        v-ripple.400=\"'rgba(255, 159, 67, 0.15)'\"\r\n        variant=\"outline-warning\"\r\n        @click=\"makeToast('warning')\"\r\n      >\r\n        Warning\r\n      </b-button>\r\n\r\n      <!-- danger -->\r\n      <b-button\r\n        v-ripple.400=\"'rgba(255, 159, 67, 0.15)'\"\r\n        variant=\"outline-danger\"\r\n        @click=\"makeToast('danger')\"\r\n      >\r\n        Danger\r\n      </b-button>\r\n\r\n      <!-- success -->\r\n      <b-button\r\n        v-ripple.400=\"'rgba(40, 199, 111, 0.15)'\"\r\n        variant=\"outline-success\"\r\n        @click=\"makeToast('success')\"\r\n      >\r\n        Success\r\n      </b-button>\r\n\r\n      <!-- info -->\r\n      <b-button\r\n        v-ripple.400=\"'rgba(0, 207, 232, 0.15)'\"\r\n        variant=\"outline-info\"\r\n        @click=\"makeToast('info')\"\r\n      >\r\n        Info\r\n      </b-button>\r\n    </div>\r\n\r\n    <template #code>\r\n      {{ codeVariant }}\r\n    </template>\r\n  </b-card-code>\r\n</template>\r\n\r\n<script>\r\nimport BCardCode from '@core/components/b-card-code'\r\nimport { BButton, BCardText } from 'bootstrap-vue'\r\nimport Ripple from 'vue-ripple-directive'\r\nimport { codeVariant } from './code'\r\n\r\nexport default {\r\n  components: {\r\n    BCardCode,\r\n    BButton,\r\n    BCardText,\r\n  },\r\n  directives: {\r\n    Ripple,\r\n  },\r\n  data() {\r\n    return {\r\n      codeVariant,\r\n    }\r\n  },\r\n  methods: {\r\n    makeToast(variant = null) {\r\n      this.$bvToast.toast('Toast body content', {\r\n        title: `Variant ${variant || 'default'}`,\r\n        variant,\r\n        solid: false,\r\n      })\r\n    },\r\n  },\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/components/toasts"}]}