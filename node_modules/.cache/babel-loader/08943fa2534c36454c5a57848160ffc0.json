{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\forms\\form-element\\autosuggest\\code.js","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\forms\\form-element\\autosuggest\\code.js","mtime":1653043181289},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\babel.config.js","mtime":1653043180287},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js","mtime":1653043263838}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Kamal/Desktop/upwork/frontend_insurance/src/views/forms/form-element/autosuggest/code.js"],"names":["codeBasic","codeSlot","codeSection","codeAjax"],"mappings":"AAAA,OAAO,IAAMA,SAAS,y7CAAf;AAoDP,OAAO,IAAMC,QAAQ,o8DAAd;AAyEP,OAAO,IAAMC,WAAW,s5FAAjB;AAqGP,OAAO,IAAMC,QAAQ,0iHAAd","sourcesContent":["export const codeBasic = `\r\n<template>\r\n  <vue-autosuggest\r\n    :suggestions=\"filteredOptions\"\r\n    :limit=\"10\"\r\n    :input-props=\"{id:'autosuggest__input',class:'form-control', placeholder:'Do you feel lucky?'}\"\r\n    @input=\"onInputChange\"\r\n  >\r\n    <template slot-scope=\"{suggestion}\">\r\n      <span class=\"my-suggestion-item\">{{ suggestion.item.name }}</span>\r\n    </template>\r\n  </vue-autosuggest>\r\n</template>\r\n\r\n<script>\r\nimport { VueAutosuggest } from 'vue-autosuggest'\r\n\r\nexport default {\r\n  components: {\r\n    VueAutosuggest,\r\n  },\r\n  data() {\r\n    return {\r\n      datasuggest: [],\r\n      filteredOptions: [],\r\n      limit: 10,\r\n      selected: null,\r\n    }\r\n  },\r\n  created() {\r\n    this.$http.get('/autosuggest/data')\r\n      .then(res => { this.datasuggest = res })\r\n  },\r\n  methods: {\r\n    onInputChange(text) {\r\n      if (text === '' || text === undefined) {\r\n        return\r\n      }\r\n\r\n      /* Full control over filtering. Maybe fetch from API?! Up to you!!! */\r\n      const filteredDevelopers = this.datasuggest.data[0].developers.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) > -1).slice(0, this.limit)\r\n      const filteredDesigner = this.datasuggest.data[0].designers.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) > -1).slice(0, this.limit)\r\n      const filteredData = filteredDevelopers.concat(filteredDesigner)\r\n      this.filteredOptions = [{\r\n        data: filteredData,\r\n      }]\r\n    },\r\n  },\r\n}\r\n</script>\r\n`\r\n\r\nexport const codeSlot = `\r\n<template>\r\n  <vue-autosuggest\r\n    :suggestions=\"filteredOptions\"\r\n    :input-props=\"inputProps\"\r\n    :on-selected=\"onSelected\"\r\n    :limit=\"10\"\r\n    @input=\"onInputChange\"\r\n  >\r\n    <template slot-scope=\"{suggestion}\">\r\n      <div class=\"d-flex align-items-center\">\r\n        <b-avatar :src=\"suggestion.item.img\" />\r\n        <div class=\"detail ml-50\">\r\n          <b-card-text class=\"mb-0\">\r\n            {{ suggestion.item.name }}\r\n          </b-card-text>\r\n          <small class=\"text-muted\">\r\n            {{ suggestion.item.time }}\r\n          </small>\r\n        </div>\r\n      </div>\r\n    </template>\r\n  </vue-autosuggest>\r\n</template>\r\n\r\n<script>\r\nimport { VueAutosuggest } from 'vue-autosuggest'\r\nimport { BAvatar, BCardText } from 'bootstrap-vue'\r\n\r\nexport default {\r\n  components: {\r\n    VueAutosuggest,\r\n    BCardText,\r\n    BAvatar,\r\n  },\r\n  data() {\r\n    return {\r\n      datasuggest: [],\r\n      filteredOptions: [],\r\n      inputProps: {\r\n        id: 'autosuggest__input',\r\n        class: 'form-control',\r\n        placeholder: \"Type 'e'\",\r\n      },\r\n      limit: 10,\r\n    }\r\n  },\r\n  created() {\r\n    this.$http.get('/autosuggest/data')\r\n      .then(res => { this.datasuggest = res })\r\n  },\r\n  methods: {\r\n    onSelected(option) {\r\n      this.selected = option.item\r\n    },\r\n    onInputChange(text) {\r\n      if (text === '' || text === undefined) {\r\n        return\r\n      }\r\n\r\n      /* Full control over filtering. Maybe fetch from API?! Up to you!!! */\r\n      const filteredDevelopers = this.datasuggest.data[0].developers.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) > -1).slice(0, this.limit)\r\n      const filteredDesigner = this.datasuggest.data[0].designers.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) > -1).slice(0, this.limit)\r\n      const filteredData = filteredDevelopers.concat(filteredDesigner)\r\n      this.filteredOptions = [{\r\n        data: filteredData,\r\n      }]\r\n    },\r\n  },\r\n}\r\n</script>\r\n`\r\n\r\nexport const codeSection = `\r\n<template>\r\n  <vue-autosuggest\r\n    v-model=\"query\"\r\n    :suggestions=\"suggestions\"\r\n    :input-props=\"inputProps\"\r\n    :section-configs=\"sectionConfigs\"\r\n    :render-suggestion=\"renderSuggestion\"\r\n    :limit=\"10\"\r\n    @input=\"fetchResults\"\r\n  />\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable vue/no-unused-components */\r\n/* eslint no-unused-expressions: [\"error\", { \"allowShortCircuit\": true }] */\r\nimport { VueAutosuggest } from 'vue-autosuggest'\r\nimport { BAvatar, BCardText } from 'bootstrap-vue'\r\n\r\nexport default {\r\n  components: {\r\n    VueAutosuggest,\r\n    BAvatar,\r\n    BCardText,\r\n  },\r\n  data() {\r\n    return {\r\n      datasuggest: [],\r\n      query: '',\r\n      suggestions: [],\r\n      selected: null,\r\n      inputProps: {\r\n        id: 'autosuggest__input',\r\n        class: 'form-control',\r\n        placeholder: \"Type 'e'\",\r\n      },\r\n      sectionConfigs: {\r\n        developers: {\r\n          limit: 6,\r\n          label: 'Developers',\r\n          onSelected: selected => {\r\n            this.selected = selected.item\r\n          },\r\n        },\r\n        pages: {\r\n          limit: 6,\r\n          label: 'Pages',\r\n          onSelected: selected => {\r\n            this.selected = selected.item\r\n          },\r\n        },\r\n      },\r\n      limit: 10,\r\n    }\r\n  },\r\n  created() {\r\n    this.$http.get('/autosuggest/data')\r\n      .then(res => { this.datasuggest = res })\r\n  },\r\n  methods: {\r\n    fetchResults(text) {\r\n      const { query } = this\r\n      if (query) {\r\n        this.suggestions = []\r\n      }\r\n\r\n      /* Full control over filtering. Maybe fetch from API?! Up to you!!! */\r\n      const filteredDevelopers = this.datasuggest.data[0].developers.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) > -1).slice(0, this.limit)\r\n      const filteredPages = this.datasuggest.data[0].pages.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) > -1).slice(0, this.limit)\r\n      filteredDevelopers.length && this.suggestions.push({ name: 'developers', data: filteredDevelopers })\r\n      filteredPages.length && this.suggestions.push({ name: 'pages', data: filteredPages })\r\n    },\r\n    renderSuggestion(suggestion) {\r\n      if (suggestion.name === 'developers') {\r\n        const dev = suggestion.item\r\n        return (\r\n          <div class=\"d-flex align-items-center\">\r\n            <b-avatar src={dev.img} class=\"mr-50\"></b-avatar>\r\n            <div class=\"detail\">\r\n              <b-card-text class=\"mb-0\">{dev.name}</b-card-text>\r\n              <small class=\"text-muted\">{dev.email}</small>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n      if (suggestion.name === 'pages') {\r\n        const page = suggestion.item\r\n        return (\r\n          <div class=\"d-flex align-items-center\">\r\n            <feather-icon icon={page.icon} size={'18'} class={'mr-75'} />\r\n            <span>{page.name}</span>\r\n          </div>\r\n        )\r\n      }\r\n      return false\r\n    },\r\n  },\r\n}\r\n</script>\r\n`\r\n\r\nexport const codeAjax = `\r\n<template>\r\n  <div>\r\n    <vue-autosuggest\r\n      ref=\"autocomplete\"\r\n      v-model=\"query\"\r\n      :suggestions=\"suggestions\"\r\n      :input-props=\"inputProps\"\r\n      :section-configs=\"sectionConfigs\"\r\n      :render-suggestion=\"renderSuggestion\"\r\n      :get-suggestion-value=\"getSuggestionValue\"\r\n      @input=\"fetchResults\"\r\n    />\r\n\r\n    <b-card-text class=\"mt-1\">\r\n      Selected element (object):\r\n    </b-card-text>\r\n    <b-card\r\n      class=\"border\"\r\n      no-body\r\n    >\r\n      <pre>{{ JSON.stringify(selected, null, 4) }}</pre>\r\n    </b-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable vue/no-unused-components */\r\n/* eslint no-unused-expressions: [\"error\", { \"allowShortCircuit\": true }] */\r\nimport { BCard, BCardText, BAvatar } from 'bootstrap-vue'\r\nimport { VueAutosuggest } from 'vue-autosuggest'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  components: {\r\n    VueAutosuggest,\r\n    BCard,\r\n    BCardText,\r\n    BAvatar,\r\n  },\r\n  data() {\r\n    return {\r\n      query: '',\r\n      results: [],\r\n      timeout: null,\r\n      selected: null,\r\n      debounceMilliseconds: 250,\r\n      usersUrl: 'https://jsonplaceholder.typicode.com/users',\r\n      photosUrl: 'https://jsonplaceholder.typicode.com/photos',\r\n      inputProps: {\r\n        id: 'autosuggest__input_ajax',\r\n        placeholder: 'Do you feel lucky, punk?',\r\n        class: 'form-control',\r\n        name: 'ajax',\r\n      },\r\n      suggestions: [],\r\n      sectionConfigs: {\r\n        destinations: {\r\n          limit: 6,\r\n          label: 'Destination',\r\n          onSelected: selected => {\r\n            this.selected = selected.item\r\n          },\r\n        },\r\n        hotels: {\r\n          limit: 6,\r\n          label: 'Hotels',\r\n          onSelected: selected => {\r\n            this.selected = selected.item\r\n          },\r\n        },\r\n      },\r\n    }\r\n  },\r\n  methods: {\r\n    fetchResults() {\r\n      const { query } = this\r\n\r\n      clearTimeout(this.timeout)\r\n      this.timeout = setTimeout(() => {\r\n        const photosPromise = axios.get(this.photosUrl)\r\n        const usersPromise = axios.get(this.usersUrl)\r\n\r\n        Promise.all([photosPromise, usersPromise]).then(values => {\r\n          this.suggestions = []\r\n          this.selected = null\r\n\r\n          const photos = this.filterResults(values[0].data, query, 'title')\r\n          const users = this.filterResults(values[1].data, query, 'name')\r\n          users.length && this.suggestions.push({ name: 'destinations', data: users })\r\n          photos.length && this.suggestions.push({ name: 'hotels', data: photos })\r\n        })\r\n      }, this.debounceMilliseconds)\r\n    },\r\n    filterResults(data, text, field) {\r\n      return data.filter(item => {\r\n        if (item[field].toLowerCase().indexOf(text.toLowerCase()) > -1) {\r\n          return item[field]\r\n        }\r\n        return false\r\n      }).sort()\r\n    },\r\n    renderSuggestion(suggestion) {\r\n      if (suggestion.name === 'hotels') {\r\n        const image = suggestion.item\r\n        return (\r\n          <div class=\"d-flex\">\r\n            <div>\r\n              <b-avatar src={image.thumbnailUrl} class=\"mr-50\"></b-avatar>\r\n            </div>\r\n            <div>\r\n              <span>{image.title}</span>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n      return suggestion.item.name\r\n    },\r\n    getSuggestionValue(suggestion) {\r\n      const { name, item } = suggestion\r\n      return name === 'hotels' ? item.title : item.name\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\npre{\r\n  min-height: 295px;\r\n  padding: 1.5rem;\r\n  margin-bottom: 0;\r\n  border-radius: .5rem;\r\n}\r\n</style>\r\n`\r\n"]}]}