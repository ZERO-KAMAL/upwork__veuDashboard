{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\views\\components\\toasts\\ToastsAdvance.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\views\\components\\toasts\\ToastsAdvance.vue","mtime":1653043181155},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\babel.config.js","mtime":1653043180287},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js","mtime":1653043263838},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js","mtime":1653043264822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEJDYXJkQ29kZSBmcm9tICdAY29yZS9jb21wb25lbnRzL2ItY2FyZC1jb2RlJzsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lCgppbXBvcnQgeyBCQnV0dG9uLCBCU3Bpbm5lciwgQkNhcmRUZXh0IH0gZnJvbSAnYm9vdHN0cmFwLXZ1ZSc7CmltcG9ydCBSaXBwbGUgZnJvbSAndnVlLXJpcHBsZS1kaXJlY3RpdmUnOwppbXBvcnQgeyBjb2RlQWR2YW5jZSB9IGZyb20gJy4vY29kZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBCQ2FyZENvZGU6IEJDYXJkQ29kZSwKICAgIEJCdXR0b246IEJCdXR0b24sCiAgICBCQ2FyZFRleHQ6IEJDYXJkVGV4dCwKICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZQogICAgQlNwaW5uZXI6IEJTcGlubmVyCiAgfSwKICBkaXJlY3RpdmVzOiB7CiAgICBSaXBwbGU6IFJpcHBsZQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvdW50OiAwLAogICAgICBjb2RlQWR2YW5jZTogY29kZUFkdmFuY2UKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBwb3BUb2FzdDogZnVuY3Rpb24gcG9wVG9hc3QoKSB7CiAgICAgIC8vIFVzZSBhIHNob3J0ZXIgbmFtZSBmb3IgdGhpcy4kY3JlYXRlRWxlbWVudAogICAgICB2YXIgaCA9IHRoaXMuJGNyZWF0ZUVsZW1lbnQ7IC8vIEluY3JlbWVudCB0aGUgdG9hc3QgY291bnQKCiAgICAgIHRoaXMuY291bnQgKz0gMTsgLy8gQ3JlYXRlIHRoZSBtZXNzYWdlCgogICAgICB2YXIgdk5vZGVzTXNnID0gaCgncCcsIHsKICAgICAgICBjbGFzczogWyd0ZXh0LWNlbnRlcicsICdtYi0wJ10KICAgICAgfSwgW2goJ2Itc3Bpbm5lcicsIHsKICAgICAgICBwcm9wczogewogICAgICAgICAgdHlwZTogJ2dyb3cnLAogICAgICAgICAgc21hbGw6IHRydWUKICAgICAgICB9CiAgICAgIH0pLCAnIEZsYXNoeSAnLCBoKCdzdHJvbmcnLCAndG9hc3QnKSwgIiBtZXNzYWdlICMiLmNvbmNhdCh0aGlzLmNvdW50LCAiICIpLCBoKCdiLXNwaW5uZXInLCB7CiAgICAgICAgcHJvcHM6IHsKICAgICAgICAgIHR5cGU6ICdncm93JywKICAgICAgICAgIHNtYWxsOiB0cnVlCiAgICAgICAgfQogICAgICB9KV0pOyAvLyBDcmVhdGUgdGhlIHRpdGxlCgogICAgICB2YXIgdk5vZGVzVGl0bGUgPSBoKCdkaXYnLCB7CiAgICAgICAgY2xhc3M6IFsnZC1mbGV4JywgJ2ZsZXgtZ3Jvdy0xJywgJ2FsaWduLWl0ZW1zLWJhc2VsaW5lJywgJ21yLTInXQogICAgICB9LCBbaCgnc3Ryb25nJywgewogICAgICAgIGNsYXNzOiAnbXItMicKICAgICAgfSwgJ1RoZSBUaXRsZScpLCBoKCdzbWFsbCcsIHsKICAgICAgICBjbGFzczogJ21sLWF1dG8gZm9udC1pdGFsaWNzJwogICAgICB9LCAnNSBtaW51dGVzIGFnbycpXSk7IC8vIFBhc3MgdGhlIFZOb2RlcyBhcyBhbiBhcnJheSBmb3IgbWVzc2FnZSBhbmQgdGl0bGUKCiAgICAgIHRoaXMuJGJ2VG9hc3QudG9hc3QoW3ZOb2Rlc01zZ10sIHsKICAgICAgICB0aXRsZTogW3ZOb2Rlc1RpdGxlXSwKICAgICAgICBzb2xpZDogZmFsc2UsCiAgICAgICAgdmFyaWFudDogJ2luZm8nCiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["ToastsAdvance.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,OAAA,SAAA,MAAA,8BAAA,C,CACA;;AACA,SAAA,OAAA,EAAA,QAAA,EAAA,SAAA,QAAA,eAAA;AACA,OAAA,MAAA,MAAA,sBAAA;AACA,SAAA,WAAA,QAAA,QAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,OAAA,EAAA,OAFA;AAGA,IAAA,SAAA,EAAA,SAHA;AAIA;AACA,IAAA,QAAA,EAAA;AALA,GADA;AAQA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GARA;AAWA,EAAA,IAXA,kBAWA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,CADA;AAEA,MAAA,WAAA,EAAA;AAFA,KAAA;AAIA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA;AACA,UAAA,CAAA,GAAA,KAAA,cAAA,CAFA,CAGA;;AACA,WAAA,KAAA,IAAA,CAAA,CAJA,CAKA;;AACA,UAAA,SAAA,GAAA,CAAA,CAAA,GAAA,EAAA;AAAA,QAAA,KAAA,EAAA,CAAA,aAAA,EAAA,MAAA;AAAA,OAAA,EAAA,CACA,CAAA,CAAA,WAAA,EAAA;AAAA,QAAA,KAAA,EAAA;AAAA,UAAA,IAAA,EAAA,MAAA;AAAA,UAAA,KAAA,EAAA;AAAA;AAAA,OAAA,CADA,EAEA,UAFA,EAGA,CAAA,CAAA,QAAA,EAAA,OAAA,CAHA,sBAIA,KAAA,KAJA,QAKA,CAAA,CAAA,WAAA,EAAA;AAAA,QAAA,KAAA,EAAA;AAAA,UAAA,IAAA,EAAA,MAAA;AAAA,UAAA,KAAA,EAAA;AAAA;AAAA,OAAA,CALA,CAAA,CAAA,CANA,CAaA;;AACA,UAAA,WAAA,GAAA,CAAA,CAAA,KAAA,EAAA;AAAA,QAAA,KAAA,EAAA,CAAA,QAAA,EAAA,aAAA,EAAA,sBAAA,EAAA,MAAA;AAAA,OAAA,EAAA,CACA,CAAA,CAAA,QAAA,EAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA,EAAA,WAAA,CADA,EAEA,CAAA,CAAA,OAAA,EAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA,EAAA,eAAA,CAFA,CAAA,CAAA,CAdA,CAkBA;;AACA,WAAA,QAAA,CAAA,KAAA,CAAA,CAAA,SAAA,CAAA,EAAA;AACA,QAAA,KAAA,EAAA,CAAA,WAAA,CADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,OAAA,EAAA;AAHA,OAAA;AAKA;AAzBA;AAjBA,CAAA","sourcesContent":["<template>\r\n  <b-card-code title=\"Advanced usage\">\r\n    <b-card-text>\r\n      <span>When using the </span>\r\n      <code>this.$bvToast.toast(...)</code>\r\n      <span>\r\n        method for generating toasts, you may want the toast content to be more than just a string message. As mentioned\r\n        in the Toasts on demand section above, you can pass arrays of\r\n      </span>\r\n      <code>VNodes</code>\r\n      <span> as the message and title for more complex content.</span>\r\n    </b-card-text>\r\n\r\n    <b-button\r\n      v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\r\n      variant=\"outline-primary\"\r\n      @click=\"popToast\"\r\n    >\r\n      Show Toast with custom content\r\n    </b-button>\r\n\r\n    <template #code>\r\n      {{ codeAdvance }}\r\n    </template>\r\n  </b-card-code>\r\n</template>\r\n\r\n<script>\r\nimport BCardCode from '@core/components/b-card-code'\r\n// eslint-disable-next-line\r\nimport { BButton, BSpinner,BCardText } from 'bootstrap-vue'\r\nimport Ripple from 'vue-ripple-directive'\r\nimport { codeAdvance } from './code'\r\n\r\nexport default {\r\n  components: {\r\n    BCardCode,\r\n    BButton,\r\n    BCardText,\r\n    // eslint-disable-next-line\r\n    BSpinner,\r\n  },\r\n  directives: {\r\n    Ripple,\r\n  },\r\n  data() {\r\n    return {\r\n      count: 0,\r\n      codeAdvance,\r\n    }\r\n  },\r\n  methods: {\r\n    popToast() {\r\n      // Use a shorter name for this.$createElement\r\n      const h = this.$createElement\r\n      // Increment the toast count\r\n      this.count += 1\r\n      // Create the message\r\n      const vNodesMsg = h('p', { class: ['text-center', 'mb-0'] }, [\r\n        h('b-spinner', { props: { type: 'grow', small: true } }),\r\n        ' Flashy ',\r\n        h('strong', 'toast'),\r\n        ` message #${this.count} `,\r\n        h('b-spinner', { props: { type: 'grow', small: true } }),\r\n      ])\r\n      // Create the title\r\n      const vNodesTitle = h('div', { class: ['d-flex', 'flex-grow-1', 'align-items-baseline', 'mr-2'] }, [\r\n        h('strong', { class: 'mr-2' }, 'The Title'),\r\n        h('small', { class: 'ml-auto font-italics' }, '5 minutes ago'),\r\n      ])\r\n      // Pass the VNodes as an array for message and title\r\n      this.$bvToast.toast([vNodesMsg], {\r\n        title: [vNodesTitle],\r\n        solid: false,\r\n        variant: 'info',\r\n      })\r\n    },\r\n  },\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/components/toasts"}]}