{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\forms\\form-element\\form-checkbox\\FormCheckboxIndeterminate.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\forms\\form-element\\form-checkbox\\FormCheckboxIndeterminate.vue","mtime":1653043181296},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\babel.config.js","mtime":1653043180287},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js","mtime":1653043263838},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js","mtime":1653043264822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEJDYXJkQ29kZSBmcm9tICdAY29yZS9jb21wb25lbnRzL2ItY2FyZC1jb2RlJzsKaW1wb3J0IHsgQkZvcm1DaGVja2JveCwgQkJ1dHRvbiwgQkNhcmRUZXh0IH0gZnJvbSAnYm9vdHN0cmFwLXZ1ZSc7CmltcG9ydCBSaXBwbGUgZnJvbSAndnVlLXJpcHBsZS1kaXJlY3RpdmUnOwppbXBvcnQgeyBjb2RlSW5kZXRlcm1pbmF0ZSB9IGZyb20gJy4vY29kZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBCRm9ybUNoZWNrYm94OiBCRm9ybUNoZWNrYm94LAogICAgQkNhcmRDb2RlOiBCQ2FyZENvZGUsCiAgICBCQnV0dG9uOiBCQnV0dG9uLAogICAgQkNhcmRUZXh0OiBCQ2FyZFRleHQKICB9LAogIGRpcmVjdGl2ZXM6IHsKICAgIFJpcHBsZTogUmlwcGxlCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hlY2tlZDogdHJ1ZSwKICAgICAgaW5kZXRlcm1pbmF0ZTogdHJ1ZSwKICAgICAgY29kZUluZGV0ZXJtaW5hdGU6IGNvZGVJbmRldGVybWluYXRlCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgdG9nZ2xlSW5kZXRlcm1pbmF0ZTogZnVuY3Rpb24gdG9nZ2xlSW5kZXRlcm1pbmF0ZSgpIHsKICAgICAgdGhpcy5pbmRldGVybWluYXRlID0gIXRoaXMuaW5kZXRlcm1pbmF0ZTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["FormCheckboxIndeterminate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,OAAA,SAAA,MAAA,8BAAA;AACA,SAAA,aAAA,EAAA,OAAA,EAAA,SAAA,QAAA,eAAA;AACA,OAAA,MAAA,MAAA,sBAAA;AACA,SAAA,iBAAA,QAAA,QAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA,aADA;AAEA,IAAA,SAAA,EAAA,SAFA;AAGA,IAAA,OAAA,EAAA,OAHA;AAIA,IAAA,SAAA,EAAA;AAJA,GADA;AAOA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GAPA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,IADA;AAEA,MAAA,aAAA,EAAA,IAFA;AAGA,MAAA,iBAAA,EAAA;AAHA,KAAA;AAKA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,mBADA,iCACA;AACA,WAAA,aAAA,GAAA,CAAA,KAAA,aAAA;AACA;AAHA;AAjBA,CAAA","sourcesContent":["<template>\r\n  <b-card-code title=\"Indeterminate (tri-state) support\">\r\n    <b-card-text>\r\n      <code>&lt;b-form-checkbox&gt;</code>\r\n      <span> supports setting this visual indeterminate state via the </span>\r\n      <code>indeterminate</code>\r\n      <span> prop (defaults to </span>\r\n      <code>false</code>\r\n      <span> ). Clicking the checkbox will clear its indeterminate state. The </span>\r\n      <code>indeterminate</code>\r\n      <span> prop can be synced to the checkbox's state by v-binding the </span>\r\n      <code>indeterminate</code>\r\n      <span> prop with the </span>\r\n      <code>.sync</code>\r\n      <span> modifier.</span>\r\n    </b-card-text>\r\n\r\n    <!-- checkbox -->\r\n    <b-form-checkbox\r\n      v-model=\"checked\"\r\n      :indeterminate.sync=\"indeterminate\"\r\n    >\r\n      Click me to see what happens\r\n    </b-form-checkbox>\r\n\r\n    <!-- button -->\r\n    <b-button\r\n      v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\r\n      class=\"mt-1\"\r\n      variant=\"outline-primary\"\r\n      @click=\"toggleIndeterminate\"\r\n    >\r\n      Toggle Indeterminate State\r\n    </b-button>\r\n\r\n    <div class=\"mt-1\">\r\n      Checked: <strong>{{ checked }}</strong><br>\r\n      Indeterminate: <strong>{{ indeterminate }}</strong>\r\n    </div>\r\n\r\n    <template #code>\r\n      {{ codeIndeterminate }}\r\n    </template>\r\n  </b-card-code>\r\n</template>\r\n\r\n<script>\r\nimport BCardCode from '@core/components/b-card-code'\r\nimport { BFormCheckbox, BButton, BCardText } from 'bootstrap-vue'\r\nimport Ripple from 'vue-ripple-directive'\r\nimport { codeIndeterminate } from './code'\r\n\r\nexport default {\r\n  components: {\r\n    BFormCheckbox,\r\n    BCardCode,\r\n    BButton,\r\n    BCardText,\r\n  },\r\n  directives: {\r\n    Ripple,\r\n  },\r\n  data() {\r\n    return {\r\n      checked: true,\r\n      indeterminate: true,\r\n      codeIndeterminate,\r\n    }\r\n  },\r\n  methods: {\r\n    toggleIndeterminate() {\r\n      this.indeterminate = !this.indeterminate\r\n    },\r\n  },\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/forms/form-element/form-checkbox"}]}