{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\views\\forms\\form-validation\\FormValidationExtend.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\views\\forms\\form-validation\\FormValidationExtend.vue","mtime":1653043181438},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\babel.config.js","mtime":1653043180287},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js","mtime":1653043263838},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js","mtime":1653043264822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEJDYXJkQ29kZSBmcm9tICdAY29yZS9jb21wb25lbnRzL2ItY2FyZC1jb2RlJzsKaW1wb3J0IHsgVmFsaWRhdGlvblByb3ZpZGVyLCBWYWxpZGF0aW9uT2JzZXJ2ZXIgfSBmcm9tICd2ZWUtdmFsaWRhdGUnOwppbXBvcnQgeyBCRm9ybUlucHV0LCBCRm9ybUdyb3VwLCBCRm9ybSwgQkJ1dHRvbiwgQlJvdywgQkNvbCwgQkNhcmRUZXh0IH0gZnJvbSAnYm9vdHN0cmFwLXZ1ZSc7CmltcG9ydCAncHJpc21qcyc7CmltcG9ydCAncHJpc21qcy90aGVtZXMvcHJpc20tdG9tb3Jyb3cuY3NzJzsKaW1wb3J0IFByaXNtIGZyb20gJ3Z1ZS1wcmlzbS1jb21wb25lbnQnOwppbXBvcnQgeyBjb2RlRXh0ZW5kZWQgfSBmcm9tICcuL2NvZGUnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQkNhcmRDb2RlOiBCQ2FyZENvZGUsCiAgICBWYWxpZGF0aW9uUHJvdmlkZXI6IFZhbGlkYXRpb25Qcm92aWRlciwKICAgIFZhbGlkYXRpb25PYnNlcnZlcjogVmFsaWRhdGlvbk9ic2VydmVyLAogICAgQkZvcm1JbnB1dDogQkZvcm1JbnB1dCwKICAgIEJGb3JtR3JvdXA6IEJGb3JtR3JvdXAsCiAgICBCQ2FyZFRleHQ6IEJDYXJkVGV4dCwKICAgIEJGb3JtOiBCRm9ybSwKICAgIEJSb3c6IEJSb3csCiAgICBCQ29sOiBCQ29sLAogICAgQkJ1dHRvbjogQkJ1dHRvbiwKICAgIFByaXNtOiBQcmlzbQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNhcmROVW06ICcnLAogICAgICBwb3NOdW06ICcnLAogICAgICBjb2RlRXh0ZW5kZWQ6IGNvZGVFeHRlbmRlZCwKICAgICAgY29kZUNyZWRpdDogImV4cG9ydCBjb25zdCBjcmVkaXQgPSBleHRlbmQoJ2NyZWRpdCcsIHtcbiAgICB2YWxpZGF0ZTogdmFsaWRhdG9yQ3JlZGl0Q2FyZCxcbiAgICBtZXNzYWdlOiAnUGxlYXNlIGVudGVyIHBvc2l0aXZlIG51bWJlciEnLFxuICB9KVxuXG4gIGV4cG9ydCBjb25zdCB2YWxpZGF0b3JDcmVkaXRDYXJkID0gY3JlZGl0bnVtID0+IHtcbiAgLyogZXNsaW50LWRpc2FibGUgbm8tdXNlbGVzcy1lc2NhcGUgKi9cbiAgY29uc3QgY1JlZ0V4cCA9IC9eKD86M1s0N11bMC05XXsxM30pJC9cbiAgLyogZXNsaW50LWVuYWJsZSBuby11c2VsZXNzLWVzY2FwZSAqL1xuICBjb25zdCB2YWxpZENyZWRpdENhcmQgPSBjUmVnRXhwLnRlc3QoY3JlZGl0bnVtKVxuICByZXR1cm4gdmFsaWRDcmVkaXRDYXJkXG4gIH0iLAogICAgICBjb2RlUG9zaXRpdmU6ICJleHBvcnQgY29uc3QgcG9zaXRpdmUgPSBleHRlbmQoJ3Bvc2l0aXZlJywge1xuICB2YWxpZGF0ZTogdmFsaWRhdG9yUG9zaXRpdmUsXG4gIG1lc3NhZ2U6ICdQbGVhc2UgZW50ZXIgcG9zaXRpdmUgbnVtYmVyIScsXG4gIH0pXG5cbiAgZXhwb3J0IGNvbnN0IHZhbGlkYXRvclBvc2l0aXZlID0gdmFsdWUgPT4ge1xuICBpZiAodmFsdWUgPj0gMCkge1xuICAgIHJldHVybiB0cnVlXG4gIH1cbiAgcmV0dXJuIGZhbHNlXG4gIH1cbiAgIgogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHZhbGlkYXRpb25Gb3JtOiBmdW5jdGlvbiB2YWxpZGF0aW9uRm9ybSgpIHsKICAgICAgdGhpcy4kcmVmcy5zaW1wbGVSdWxlcy52YWxpZGF0ZSgpLnRoZW4oZnVuY3Rpb24gKHN1Y2Nlc3MpIHsKICAgICAgICBpZiAoc3VjY2VzcykgewogICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lCiAgICAgICAgICBhbGVydCgnZm9ybSBzdWJtaXR0ZWQhJyk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["FormValidationExtend.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA,OAAA,SAAA,MAAA,8BAAA;AACA,SAAA,kBAAA,EAAA,kBAAA,QAAA,cAAA;AACA,SACA,UADA,EACA,UADA,EACA,KADA,EACA,OADA,EACA,IADA,EACA,IADA,EACA,SADA,QAEA,eAFA;AAGA,OAAA,SAAA;AACA,OAAA,mCAAA;AACA,OAAA,KAAA,MAAA,qBAAA;AACA,SAAA,YAAA,QAAA,QAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,kBAAA,EAAA,kBAFA;AAGA,IAAA,kBAAA,EAAA,kBAHA;AAIA,IAAA,UAAA,EAAA,UAJA;AAKA,IAAA,UAAA,EAAA,UALA;AAMA,IAAA,SAAA,EAAA,SANA;AAOA,IAAA,KAAA,EAAA,KAPA;AAQA,IAAA,IAAA,EAAA,IARA;AASA,IAAA,IAAA,EAAA,IATA;AAUA,IAAA,OAAA,EAAA,OAVA;AAWA,IAAA,KAAA,EAAA;AAXA,GADA;AAcA,EAAA,IAdA,kBAcA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA,EAFA;AAGA,MAAA,YAAA,EAAA,YAHA;AAIA,MAAA,UAAA,2YAJA;AAgBA,MAAA,YAAA;AAhBA,KAAA;AA6BA,GA5CA;AA6CA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,WAAA,KAAA,CAAA,WAAA,CAAA,QAAA,GAAA,IAAA,CAAA,UAAA,OAAA,EAAA;AACA,YAAA,OAAA,EAAA;AACA;AACA,UAAA,KAAA,CAAA,iBAAA,CAAA;AACA;AACA,OALA;AAMA;AARA;AA7CA,CAAA","sourcesContent":["<template>\r\n  <b-card-code title=\"Extended\">\r\n    <b-card-text>You can extend your custom rule.</b-card-text>\r\n\r\n    <b-row>\r\n\r\n      <!-- code -->\r\n      <b-col md=\"6\">\r\n        <prism\r\n          language=\"javascript\"\r\n          class=\"rounded \"\r\n        >\r\n          {{ codeCredit }}\r\n        </prism>\r\n      </b-col>\r\n\r\n      <!-- ciode -->\r\n      <b-col md=\"6\">\r\n        <prism\r\n          language=\"javascript\"\r\n          class=\"rounded mb-2\"\r\n        >\r\n          {{ codePositive }}\r\n        </prism>\r\n      </b-col>\r\n    </b-row>\r\n\r\n    <!-- form -->\r\n    <validation-observer ref=\"simpleRules\">\r\n      <b-form>\r\n        <b-row>\r\n          <b-col md=\"6\">\r\n            <b-form-group label=\"Credit Card\">\r\n              <validation-provider\r\n                #default=\"{ errors }\"\r\n                name=\"Credit Card\"\r\n                rules=\"required|credit-card\"\r\n              >\r\n                <b-form-input\r\n                  v-model=\"cardNUm\"\r\n                  :state=\"errors.length > 0 ? false:null\"\r\n                  placeholder=\"Credit Card Number\"\r\n                />\r\n                <small class=\"text-danger\">{{ errors[0] }}</small>\r\n              </validation-provider>\r\n            </b-form-group>\r\n          </b-col>\r\n          <b-col md=\"6\">\r\n            <b-form-group label=\"Enter Only Positive Number\">\r\n              <validation-provider\r\n                #default=\"{ errors }\"\r\n                name=\"Number\"\r\n                rules=\"required|positive\"\r\n              >\r\n                <b-form-input\r\n                  v-model=\"posNum\"\r\n                  :state=\"errors.length > 0 ? false:null\"\r\n                  placeholder=\"Positive Number\"\r\n                />\r\n                <small class=\"text-danger\">{{ errors[0] }}</small>\r\n              </validation-provider>\r\n            </b-form-group>\r\n          </b-col>\r\n        </b-row>\r\n\r\n        <!-- submit button -->\r\n        <b-form-group>\r\n          <b-button\r\n            type=\"submit\"\r\n            variant=\"primary\"\r\n            @click.prevent=\"validationForm\"\r\n          >\r\n            Submit\r\n          </b-button>\r\n        </b-form-group>\r\n      </b-form>\r\n    </validation-observer>\r\n\r\n    <template #code>\r\n      {{ codeExtended }}\r\n    </template>\r\n  </b-card-code>\r\n</template>\r\n\r\n<script>\r\nimport BCardCode from '@core/components/b-card-code'\r\nimport { ValidationProvider, ValidationObserver } from 'vee-validate'\r\nimport {\r\n  BFormInput, BFormGroup, BForm, BButton, BRow, BCol, BCardText,\r\n} from 'bootstrap-vue'\r\nimport 'prismjs'\r\nimport 'prismjs/themes/prism-tomorrow.css'\r\nimport Prism from 'vue-prism-component'\r\nimport { codeExtended } from './code'\r\n\r\nexport default {\r\n  components: {\r\n    BCardCode,\r\n    ValidationProvider,\r\n    ValidationObserver,\r\n    BFormInput,\r\n    BFormGroup,\r\n    BCardText,\r\n    BForm,\r\n    BRow,\r\n    BCol,\r\n    BButton,\r\n    Prism,\r\n  },\r\n  data() {\r\n    return {\r\n      cardNUm: '',\r\n      posNum: '',\r\n      codeExtended,\r\n      codeCredit: `export const credit = extend('credit', {\r\n    validate: validatorCreditCard,\r\n    message: 'Please enter positive number!',\r\n  })\r\n\r\n  export const validatorCreditCard = creditnum => {\r\n  /* eslint-disable no-useless-escape */\r\n  const cRegExp = /^(?:3[47][0-9]{13})$/\r\n  /* eslint-enable no-useless-escape */\r\n  const validCreditCard = cRegExp.test(creditnum)\r\n  return validCreditCard\r\n  }`,\r\n      codePositive: `export const positive = extend('positive', {\r\n  validate: validatorPositive,\r\n  message: 'Please enter positive number!',\r\n  })\r\n\r\n  export const validatorPositive = value => {\r\n  if (value >= 0) {\r\n    return true\r\n  }\r\n  return false\r\n  }\r\n  `,\r\n    }\r\n  },\r\n  methods: {\r\n    validationForm() {\r\n      this.$refs.simpleRules.validate().then(success => {\r\n        if (success) {\r\n        // eslint-disable-next-line\r\n          alert('form submitted!')\r\n        }\r\n      })\r\n    },\r\n  },\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/forms/form-validation"}]}