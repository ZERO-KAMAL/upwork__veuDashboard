{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\extensions\\drag-drop\\code.js","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\extensions\\drag-drop\\code.js","mtime":1653043181222},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\babel.config.js","mtime":1653043180287},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js","mtime":1653043263838}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Kamal/Desktop/upwork/frontend_insurance/src/views/extensions/drag-drop/code.js"],"names":["codeSimple","codeMultiple","codeClone","codeAnimation"],"mappings":"AAAA,OAAO,IAAMA,UAAU,uvCAAhB;AAuDP,OAAO,IAAMC,YAAY,ivHAAlB;AAiKP,OAAO,IAAMC,SAAS,6yDAAf;AA2FP,OAAO,IAAMC,aAAa,0uEAAnB","sourcesContent":["export const codeSimple = `\r\n<template>\r\n  <div>\r\n    <!-- draggable -->\r\n    <draggable\r\n      v-model=\"list\"\r\n      tag=\"ul\"\r\n      class=\"list-group list-group-flush cursor-move\"\r\n    >\r\n      <b-list-group-item\r\n        v-for=\"(item, index) in list\"\r\n        :key=\"index\"\r\n        tag=\"li\"\r\n      >\r\n        <strong> {{ item }}</strong>\r\n      </b-list-group-item>\r\n    </draggable>\r\n\r\n    <!-- code -->\r\n    <prism\r\n      language=\"javascript\"\r\n      class=\"rounded mt-2\"\r\n    >list: {{ list }}\r\n    </prism>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { BListGroupItem} from 'bootstrap-vue'\r\nimport draggable from 'vuedraggable'\r\nimport Prism from 'vue-prism-component'\r\nimport 'prismjs'\r\nimport 'prismjs/themes/prism-tomorrow.css'\r\n\r\nexport default {\r\n  components: {\r\n    draggable,\r\n    BListGroupItem,\r\n    Prism,\r\n  },\r\n  data() {\r\n    return {\r\n      list:\r\n      [\r\n        'Marzipan I love I love. Soufflé donut I love gummi bears powder. Candy danish biscuit.',\r\n        'Halvah bonbon bonbon brownie sugar plum. Halvah I love cupcake I love.',\r\n        'Cake muffin icing topping wafer topping gummi bears apple pie.',\r\n        'Cotton candy gummi bears bear claw cake brownie jelly-o lemon drops croissant sweet roll.',\r\n      ],\r\n    }\r\n  },\r\n}\r\n</script>\r\n`\r\n\r\nexport const codeMultiple = `\r\n<template>\r\n  <div>\r\n    <b-row>\r\n\r\n      <!-- people group 1 -->\r\n      <b-col md=\"6\">\r\n        <h6 class=\"text-primary font-weight-bold mb-2\">\r\n          People Group 1\r\n        </h6>\r\n\r\n        <!-- draggable -->\r\n        <draggable\r\n          :list=\"list1\"\r\n          tag=\"ul\"\r\n          group=\"people\"\r\n          class=\"list-group list-group-flush cursor-move\"\r\n        >\r\n          <b-list-group-item\r\n            v-for=\"(listItem, index) in list1\"\r\n            :key=\"index\"\r\n            tag=\"li\"\r\n          >\r\n            <div class=\"d-flex\">\r\n              <b-avatar :text=\"listItem.name.slice(0,2)\" />\r\n              <div class=\"ml-25\">\r\n                <b-card-text class=\"mb-0 font-weight-bold\">\r\n                  {{ listItem.name }}\r\n                </b-card-text>\r\n                <small>{{ listItem.email }}</small>\r\n              </div>\r\n            </div>\r\n          </b-list-group-item>\r\n        </draggable>\r\n      </b-col>\r\n\r\n      <!-- people group 2 -->\r\n      <b-col\r\n        md=\"6\"\r\n        class=\"mt-sm-2 mt-md-0\"\r\n      >\r\n        <h6 class=\"text-primary font-weight-bold mb-2\">\r\n          People Group 2\r\n        </h6>\r\n\r\n        <!-- draggable -->\r\n        <draggable\r\n          :list=\"list2\"\r\n          tag=\"ul\"\r\n          group=\"people\"\r\n          class=\"list-group list-group-flush cursor-move\"\r\n        >\r\n          <b-list-group-item\r\n            v-for=\"(listItem, index) in list2\"\r\n            :key=\"index\"\r\n            tag=\"li\"\r\n          >\r\n            <div class=\"d-flex\">\r\n              <b-avatar :text=\"listItem.name.slice(0,2)\" />\r\n              <div class=\"ml-25\">\r\n                <b-card-text class=\"mb-0 font-weight-bold\">\r\n                  {{ listItem.name }}\r\n                </b-card-text>\r\n                <small>{{ listItem.email }}</small>\r\n              </div>\r\n            </div>\r\n          </b-list-group-item>\r\n        </draggable>\r\n      </b-col>\r\n\r\n      <!-- people group 1 code -->\r\n      <b-col\r\n        md=\"6\"\r\n        class=\"mt-1\"\r\n      >\r\n        <prism\r\n          language=\"javascript\"\r\n          class=\"rounded\"\r\n        >\r\n          People Group 1: {{ list1 }}\r\n        </prism>\r\n      </b-col>\r\n\r\n      <!-- people group 2 code -->\r\n      <b-col\r\n        md=\"6\"\r\n        class=\"mt-1\"\r\n      >\r\n        <prism\r\n          language=\"javascript\"\r\n          class=\"rounded\"\r\n        >\r\n          People Group 2: {{ list2 }}\r\n        </prism>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  BListGroupItem, BAvatar, BRow, BCol,\r\n} from 'bootstrap-vue'\r\nimport draggable from 'vuedraggable'\r\nimport Prism from 'vue-prism-component'\r\nimport 'prismjs'\r\nimport 'prismjs/themes/prism-tomorrow.css'\r\n\r\nexport default {\r\n  components: {\r\n    BAvatar,\r\n    BListGroupItem,\r\n    BRow,\r\n    BCol,\r\n    Prism,\r\n    draggable,\r\n  },\r\n  data() {\r\n    return {\r\n      list1: [\r\n        {\r\n          name: 'Paz Joya',\r\n          email: 'girliness@spotlike.co.uk',\r\n        },\r\n        {\r\n          name: 'Sunshine Cose',\r\n          email: 'executrixship@equisized.edu',\r\n        },\r\n        {\r\n          name: 'Alba Dobbin',\r\n          email: 'bidding@demibob.or',\r\n        },\r\n        {\r\n          name: 'Marlin Hinchee',\r\n          email: 'preholding@scuffly.co.uk',\r\n        },\r\n      ],\r\n      list2: [\r\n        {\r\n          name: 'Leia Atienza',\r\n          email: 'unmeasurableness@interlamellar.co.uk',\r\n        },\r\n        {\r\n          name: 'Lashawna Vaudrainm',\r\n          email: 'soaking@khubber.com',\r\n        },\r\n        {\r\n          name: 'Liliana Henscheid',\r\n          email: 'lecideine@turndown.org',\r\n        },\r\n        {\r\n          name: 'Keven Kolter',\r\n          email: 'nontenure@anglicanum.co.uk',\r\n        },\r\n      ],\r\n    }\r\n  },\r\n}\r\n</script>\r\n`\r\n\r\nexport const codeClone = `\r\n<template>\r\n  <b-row>\r\n\r\n    <!-- tag source -->\r\n    <b-col md=\"6\">\r\n      <h6>Tag Source</h6>\r\n\r\n      <draggable\r\n        :list=\"list1\"\r\n        :group=\"{name:'tags', pull:'clone', put:false }\"\r\n        class=\"mb-1 cursor-move\"\r\n      >\r\n        <b-badge\r\n          v-for=\"(listItem, index) in list1\"\r\n          :key=\"index\"\r\n          class=\"mr-25\"\r\n        >\r\n          {{ listItem }}\r\n        </b-badge>\r\n      </draggable>\r\n    </b-col>\r\n\r\n    <!-- add tag -->\r\n    <b-col md=\"6\">\r\n      <h6>Your Tags</h6>\r\n\r\n      <draggable\r\n        :list=\"list2\"\r\n        :group=\"{name: 'tags'}\"\r\n        class=\"mb-1 cursor-move\"\r\n      >\r\n        <b-badge\r\n          v-for=\"(listItem, index) in list2\"\r\n          :key=\"index\"\r\n          class=\"mr-25\"\r\n        >\r\n          {{ listItem }}\r\n        </b-badge>\r\n      </draggable>\r\n    </b-col>\r\n\r\n    <!-- tag source code -->\r\n    <b-col md=\"6\">\r\n      <prism\r\n        language=\"javascript\"\r\n        class=\"rounded\"\r\n      >\r\n        Tag Source: {{ list1 }}\r\n      </prism>\r\n    </b-col>\r\n\r\n    <!-- tag add code -->\r\n    <b-col md=\"6\">\r\n      <prism\r\n        language=\"javascript\"\r\n        class=\"rounded\"\r\n      >\r\n        Added tags: {{ list2 }}\r\n      </prism>\r\n    </b-col>\r\n  </b-row>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  BBadge, BRow, BCol,\r\n} from 'bootstrap-vue'\r\nimport draggable from 'vuedraggable'\r\nimport Prism from 'vue-prism-component'\r\nimport 'prismjs'\r\nimport 'prismjs/themes/prism-tomorrow.css'\r\n\r\nexport default {\r\n  components: {\r\n    BBadge,\r\n    draggable,\r\n    BRow,\r\n    Prism,\r\n    BCol,\r\n  },\r\n  data() {\r\n    return {\r\n      list1: ['youtube', 'google', 'facebook', 'twitter', 'instagram', 'pinterest', 'tinder', 'slack', 'discord', 'github', 'gitlab'],\r\n      list2: ['google', 'youtube'],\r\n    }\r\n  },\r\n}\r\n</script>\r\n`\r\n\r\nexport const codeAnimation = `\r\n<template>\r\n  <div>\r\n\r\n    <h6 class=\"text-primary font-weight-bold mb-2\">\r\n      People Group\r\n    </h6>\r\n    <!-- draggable -->\r\n    <draggable\r\n      v-model=\"list\"\r\n      class=\"list-group list-group-flush cursor-move\"\r\n      tag=\"ul\"\r\n    >\r\n      <transition-group\r\n        type=\"transition\"\r\n        name=\"flip-list\"\r\n      >\r\n        <b-list-group-item\r\n          v-for=\"listItem in list\"\r\n          :key=\"listItem.email\"\r\n          tag=\"li\"\r\n        >\r\n          <div class=\"d-flex\">\r\n            <b-avatar :text=\"listItem.name.slice(0,2)\" />\r\n            <div class=\"ml-25\">\r\n              <b-card-text class=\"font-weight-bold mb-0\">\r\n                {{ listItem.name }}\r\n              </b-card-text>\r\n              <small>{{ listItem.email }}</small>\r\n            </div>\r\n          </div>\r\n        </b-list-group-item>\r\n      </transition-group>\r\n    </draggable>\r\n\r\n    <!-- code  -->\r\n    <prism\r\n      language=\"javascript\"\r\n      class=\"rounded mt-2\"\r\n    >\r\n      {{ list }}\r\n    </prism>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { BListGroupItem, BAvatar} from 'bootstrap-vue'\r\nimport draggable from 'vuedraggable'\r\nimport Prism from 'vue-prism-component'\r\nimport 'prismjs'\r\nimport 'prismjs/themes/prism-tomorrow.css'\r\n\r\nexport default {\r\n  components: {\r\n    draggable,\r\n    BListGroupItem,\r\n    BAvatar,\r\n    Prism,\r\n  },\r\n  data() {\r\n    return {\r\n      list: [{\r\n        name: 'Paz Joya',\r\n        email: 'girliness@spotlike.co.uk',\r\n      },\r\n      {\r\n        name: 'Sunshine Cose',\r\n        email: 'executrixship@equisized.edu',\r\n      },\r\n      {\r\n        name: 'Alba Dobbin',\r\n        email: 'bidding@demibob.or',\r\n      },\r\n      {\r\n        name: 'Marlin Hinchee',\r\n        email: 'preholding@scuffly.co.uk',\r\n      },\r\n      {\r\n        name: 'Leia Atienza',\r\n        email: 'unmeasurableness@interlamellar.co.uk',\r\n      },\r\n      {\r\n        name: 'Lashawna Vaudrainm',\r\n        email: 'soaking@khubber.com',\r\n      },\r\n      {\r\n        name: 'Liliana Henscheid',\r\n        email: 'lecideine@turndown.org',\r\n      },\r\n      {\r\n        name: 'Keven Kolter',\r\n        email: 'nontenure@anglicanum.co.uk',\r\n      },\r\n      ],\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n.list-group-item {\r\n  transition: all 1s\r\n}\r\n</style>\r\n`\r\n"]}]}