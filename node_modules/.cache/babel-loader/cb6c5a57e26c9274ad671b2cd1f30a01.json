{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\@core\\mixins\\ui\\transition.js","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\src\\@core\\mixins\\ui\\transition.js","mtime":1653043180388},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\babel.config.js","mtime":1653043180287},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\zafar sir\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js","mtime":1653043263838}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKZXhwb3J0IHZhciBoZWlnaHRUcmFuc2l0aW9uID0gewogIC8qDQogICAgICBIb3dUbzoNCiAgICAgIDEuIEFkZCBkeW5hbWljIHN0eWxlIHRvIGVsZW1lbnQgYW5kIHNldCBzdHlsZSBhcyBgdHJIZWlnaHRgDQogICAgICAyLiBTZXQgdHJhbnNpdGlvbiBzcGVlZCB1c2luZyBgdHJhbnNpdGlvbjogMC4zNXMgaGVpZ2h0O2AgPD0geW91IGNhbiB1c2UgYXBwcm9wcmlhdGUgdmFsdWU7DQogICAgICAzLiBPcHRpb25hbGx5IHlvdSBjYW4gc2V0IGBvdmVyZmxvdzogaGlkZGVuO2AgdG8gaGlkZSBlbGVtZW50IG92ZXJmbG93IHdoaWxlIGhlaWdodCBpcyBhbmltYXRlZC4NCiAgICAgIDQuIFNldCBpbml0aWFsIGhlaWdodCB1c2luZyBgdHJTZXRIZWlnaHRgIGJlZm9yZSBhbnkgb3BlcmF0aW9uLiBbbW91bnRlZCBob29rIGlzIHJlY29tbWVuZGVkIC0gWW91IGNhbiB1c2UgYHJlZmAgZm9yIGR5bmFtaWMgY29udGVudHNdDQogICAgICA1LiBUb2dnbGUgaGVpZ2h0IHVzaW5nIGhlaWdodCBvcGVyYXRpb25zIPCfjbsNCiAgICAgIDYuIFRvZ2dsZSB1c2FnZSBvZiAkbmV4dFRpY2sgZm9yIGhlaWdodCBvcGVyYXRpb25zIGlzIGFueSBpc3N1ZSBvY2N1ciBbZXhwZXJpbWVudGFsXSDwn5SsDQogICAgKi8KICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdHJIZWlnaHQ6IG51bGwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICB0ckFkZEhlaWdodDogZnVuY3Rpb24gdHJBZGRIZWlnaHQodmFsKSB7CiAgICAgIC8vIEFkZCBoZWlnaHQgdG8gZXhpc3RpbmcgaGVpZ2h0CiAgICAgIC8vIFVzYWdlOiBXaGVyZSBuZXcgZWxlbWVudCBpcyBhcHBlbmQgb3IgbW9yZSBoZWlnaHQgaXMgYWRkZWQgKGUuZy4gbGlzdCBhcHBlbmQpCgogICAgICAvKiBBc3N1bWVzOg0KICAgICAgIC0gSGVpZ2h0IGlzIGFzc2lnbmVkIGFuZCBpcyBgU3RyaW5nYA0KICAgICAgIC0gSW5jb21pbmcgdmFsdWUgaXMgdmFsaWQgbnVtYmVyIGluIGBOdW1iZXJgIG9yIGBTdHJpbmdgDQogICAgICAqLwogICAgICB2YXIgaGVpZ2h0VmFsdWUgPSBOdW1iZXIodGhpcy50ckhlaWdodC5zdWJzdHJpbmcoMCwgdGhpcy50ckhlaWdodC5sZW5ndGggLSAyKSk7CiAgICAgIHRoaXMudHJIZWlnaHQgPSAiIi5jb25jYXQoaGVpZ2h0VmFsdWUgKyBOdW1iZXIodmFsKSwgInB4Iik7CiAgICB9LAogICAgdHJUcmltSGVpZ2h0OiBmdW5jdGlvbiB0clRyaW1IZWlnaHQodmFsKSB7CiAgICAgIC8vIFJlbW92ZSBoZWlnaHQgZnJvbSBleGlzdGluZyBoZWlnaHQKICAgICAgLy8gVXNhZ2U6IFdoZXJlIG5ldyBlbGVtZW50IGlzIHJlbW92ZWQgb3IgaGVpZ2h0IGlzIHJlbW92ZSAoZS5nLiBsaXN0IHBvcC9lbGUgcmVtb3ZlKQoKICAgICAgLyogQXNzdW1lczoNCiAgICAgICAtIEhlaWdodCBpcyBhc3NpZ25lZCBhbmQgaXMgYFN0cmluZ2ANCiAgICAgICAtIEluY29taW5nIHZhbHVlIGlzIHZhbGlkIG51bWJlciBpbiBgTnVtYmVyYCBvciBgU3RyaW5nYA0KICAgICAgKi8KICAgICAgdmFyIGhlaWdodFZhbHVlID0gTnVtYmVyKHRoaXMudHJIZWlnaHQuc3Vic3RyaW5nKDAsIHRoaXMudHJIZWlnaHQubGVuZ3RoIC0gMikpOwogICAgICB0aGlzLnRySGVpZ2h0ID0gIiIuY29uY2F0KGhlaWdodFZhbHVlIC0gTnVtYmVyKHZhbCksICJweCIpOwogICAgfSwKICAgIHRyU2V0SGVpZ2h0OiBmdW5jdGlvbiB0clNldEhlaWdodCh2YWwpIHsKICAgICAgLy8gU2V0IGhlaWdodAogICAgICAvLyBVc2FnZTogTW9zdGx5IGZvciBhc3NpZ25pbmcgaW5pdGlhbCB2YWx1ZSBmcm9tIG1vdW50ZWQgaG9vawoKICAgICAgLyogQXNzdW1lczoNCiAgICAgICAtIEhlaWdodCBpcyBub3QgYXNzaWduZWQgYW5kIHdoYXQgdG8gYXNzaWduIGZvciBhZGQvcmVtb3ZlIG9wZXJhdGlvbg0KICAgICAgIC0gV2hhdCB0byBzZXQgaGVpZ2h0IGF0IHNvbWV0aGluZyBmb3Igb2RkIHVzYWdlDQogICAgICAgLSBJbmNvbWluZyB2YWx1ZSBpcyB2YWxpZCBudW1iZXIgaW4gYE51bWJlcmAgb3IgYFN0cmluZ2ANCiAgICAgICovCiAgICAgIGlmICh2YWwgPT09IG51bGwpIHRoaXMudHJIZWlnaHQgPSAnYXV0byc7ZWxzZSB0aGlzLnRySGVpZ2h0ID0gIiIuY29uY2F0KE51bWJlcih2YWwpLCAicHgiKTsKICAgIH0KICB9Cn07IC8vIElnbm9yZSBiZWxvdyBmb3Igbm93LiBXZSB3aWxsIHJlbW92ZSBpdCB3aGVuIHdlIGFkZCBtb3JlIHRyYW5zaXRpb24gaW4gZnV0dXJlLgoKZXhwb3J0IHZhciBfID0gbnVsbDs="},{"version":3,"sources":["C:/Users/Kamal/Desktop/upwork/zafar sir/frontend_insurance/src/@core/mixins/ui/transition.js"],"names":["heightTransition","data","trHeight","methods","trAddHeight","val","heightValue","Number","substring","length","trTrimHeight","trSetHeight","_"],"mappings":";AAAA,OAAO,IAAMA,gBAAgB,GAAG;AAC9B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIEC,EAAAA,IAb8B,kBAavB;AACL,WAAO;AACLC,MAAAA,QAAQ,EAAE;AADL,KAAP;AAGD,GAjB6B;AAkB9BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WADO,uBACKC,GADL,EACU;AACf;AACA;;AAEA;AACN;AACA;AACA;AACM,UAAMC,WAAW,GAAGC,MAAM,CAAC,KAAKL,QAAL,CAAcM,SAAd,CAAwB,CAAxB,EAA2B,KAAKN,QAAL,CAAcO,MAAd,GAAuB,CAAlD,CAAD,CAA1B;AACA,WAAKP,QAAL,aAAmBI,WAAW,GAAGC,MAAM,CAACF,GAAD,CAAvC;AACD,KAXM;AAYPK,IAAAA,YAZO,wBAYML,GAZN,EAYW;AAChB;AACA;;AAEA;AACN;AACA;AACA;AACM,UAAMC,WAAW,GAAGC,MAAM,CAAC,KAAKL,QAAL,CAAcM,SAAd,CAAwB,CAAxB,EAA2B,KAAKN,QAAL,CAAcO,MAAd,GAAuB,CAAlD,CAAD,CAA1B;AACA,WAAKP,QAAL,aAAmBI,WAAW,GAAGC,MAAM,CAACF,GAAD,CAAvC;AACD,KAtBM;AAuBPM,IAAAA,WAvBO,uBAuBKN,GAvBL,EAuBU;AACf;AACA;;AAEA;AACN;AACA;AACA;AACA;AACM,UAAIA,GAAG,KAAK,IAAZ,EAAkB,KAAKH,QAAL,GAAgB,MAAhB,CAAlB,KACK,KAAKA,QAAL,aAAmBK,MAAM,CAACF,GAAD,CAAzB;AACN;AAlCM;AAlBqB,CAAzB,C,CAwDP;;AACA,OAAO,IAAMO,CAAC,GAAG,IAAV","sourcesContent":["export const heightTransition = {\r\n  /*\r\n\r\n    HowTo:\r\n      1. Add dynamic style to element and set style as `trHeight`\r\n      2. Set transition speed using `transition: 0.35s height;` <= you can use appropriate value;\r\n      3. Optionally you can set `overflow: hidden;` to hide element overflow while height is animated.\r\n      4. Set initial height using `trSetHeight` before any operation. [mounted hook is recommended - You can use `ref` for dynamic contents]\r\n      5. Toggle height using height operations 🍻\r\n      6. Toggle usage of $nextTick for height operations is any issue occur [experimental] 🔬\r\n\r\n  */\r\n\r\n  data() {\r\n    return {\r\n      trHeight: null,\r\n    }\r\n  },\r\n  methods: {\r\n    trAddHeight(val) {\r\n      // Add height to existing height\r\n      // Usage: Where new element is append or more height is added (e.g. list append)\r\n\r\n      /* Assumes:\r\n       - Height is assigned and is `String`\r\n       - Incoming value is valid number in `Number` or `String`\r\n      */\r\n      const heightValue = Number(this.trHeight.substring(0, this.trHeight.length - 2))\r\n      this.trHeight = `${heightValue + Number(val)}px`\r\n    },\r\n    trTrimHeight(val) {\r\n      // Remove height from existing height\r\n      // Usage: Where new element is removed or height is remove (e.g. list pop/ele remove)\r\n\r\n      /* Assumes:\r\n       - Height is assigned and is `String`\r\n       - Incoming value is valid number in `Number` or `String`\r\n      */\r\n      const heightValue = Number(this.trHeight.substring(0, this.trHeight.length - 2))\r\n      this.trHeight = `${heightValue - Number(val)}px`\r\n    },\r\n    trSetHeight(val) {\r\n      // Set height\r\n      // Usage: Mostly for assigning initial value from mounted hook\r\n\r\n      /* Assumes:\r\n       - Height is not assigned and what to assign for add/remove operation\r\n       - What to set height at something for odd usage\r\n       - Incoming value is valid number in `Number` or `String`\r\n      */\r\n      if (val === null) this.trHeight = 'auto'\r\n      else this.trHeight = `${Number(val)}px`\r\n    },\r\n  },\r\n}\r\n\r\n// Ignore below for now. We will remove it when we add more transition in future.\r\nexport const _ = null\r\n"]}]}