{"remainingRequest":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\components\\popover\\PopoverAdvance.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\src\\views\\components\\popover\\PopoverAdvance.vue","mtime":1653043181110},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\babel.config.js","mtime":1653043180287},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\babel-loader\\lib\\index.js","mtime":1653043263838},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653043258756},{"path":"C:\\Users\\Kamal\\Desktop\\upwork\\frontend_insurance\\node_modules\\vue-loader\\lib\\index.js","mtime":1653043264822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEJDYXJkQ29kZSBmcm9tICdAY29yZS9jb21wb25lbnRzL2ItY2FyZC1jb2RlJzsKaW1wb3J0IHsgQlBvcG92ZXIsIEJCdXR0b24sIEJGb3JtR3JvdXAsIEJGb3JtSW5wdXQsIEJDYXJkLCBCQ2FyZFRleHQgfSBmcm9tICdib290c3RyYXAtdnVlJzsKaW1wb3J0IFJpcHBsZSBmcm9tICd2dWUtcmlwcGxlLWRpcmVjdGl2ZSc7CmltcG9ydCB7IGNvZGVBZHZhbmNlIH0gZnJvbSAnLi9jb2RlJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEJDYXJkQ29kZTogQkNhcmRDb2RlLAogICAgQlBvcG92ZXI6IEJQb3BvdmVyLAogICAgQkJ1dHRvbjogQkJ1dHRvbiwKICAgIEJGb3JtR3JvdXA6IEJGb3JtR3JvdXAsCiAgICBCQ2FyZFRleHQ6IEJDYXJkVGV4dCwKICAgIEJGb3JtSW5wdXQ6IEJGb3JtSW5wdXQsCiAgICBCQ2FyZDogQkNhcmQKICB9LAogIGRpcmVjdGl2ZXM6IHsKICAgIFJpcHBsZTogUmlwcGxlCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaW5wdXQxOiAnJywKICAgICAgaW5wdXQxc3RhdGU6IG51bGwsCiAgICAgIGlucHV0MjogJycsCiAgICAgIGlucHV0MnN0YXRlOiBudWxsLAogICAgICBpbnB1dDFSZXR1cm46ICcnLAogICAgICBpbnB1dDJSZXR1cm46ICcnLAogICAgICBwb3BvdmVyU2hvdzogZmFsc2UsCiAgICAgIGNvZGVBZHZhbmNlOiBjb2RlQWR2YW5jZQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBpbnB1dDE6IGZ1bmN0aW9uIGlucHV0MSh2YWwpIHsKICAgICAgaWYgKHZhbCkgewogICAgICAgIHRoaXMuaW5wdXQxc3RhdGUgPSB0cnVlOwogICAgICB9CiAgICB9LAogICAgaW5wdXQyOiBmdW5jdGlvbiBpbnB1dDIodmFsKSB7CiAgICAgIGlmICh2YWwpIHsKICAgICAgICB0aGlzLmlucHV0MnN0YXRlID0gdHJ1ZTsKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgb25DbG9zZTogZnVuY3Rpb24gb25DbG9zZSgpIHsKICAgICAgdGhpcy5wb3BvdmVyU2hvdyA9IGZhbHNlOwogICAgfSwKICAgIG9uT2s6IGZ1bmN0aW9uIG9uT2soKSB7CiAgICAgIGlmICghdGhpcy5pbnB1dDEpIHsKICAgICAgICB0aGlzLmlucHV0MXN0YXRlID0gZmFsc2U7CiAgICAgIH0KCiAgICAgIGlmICghdGhpcy5pbnB1dDIpIHsKICAgICAgICB0aGlzLmlucHV0MnN0YXRlID0gZmFsc2U7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmlucHV0MSAmJiB0aGlzLmlucHV0MikgewogICAgICAgIHRoaXMub25DbG9zZSgpOyAvLyBSZXR1cm4gb3VyIHBvcG92ZXIgZm9ybSByZXN1bHRzCgogICAgICAgIHRoaXMuaW5wdXQxUmV0dXJuID0gdGhpcy5pbnB1dDE7CiAgICAgICAgdGhpcy5pbnB1dDJSZXR1cm4gPSB0aGlzLmlucHV0MjsKICAgICAgfQogICAgfSwKICAgIG9uU2hvdzogZnVuY3Rpb24gb25TaG93KCkgewogICAgICAvLyBUaGlzIGlzIGNhbGxlZCBqdXN0IGJlZm9yZSB0aGUgcG9wb3ZlciBpcyBzaG93bgogICAgICAvLyBSZXNldCBvdXIgcG9wb3ZlciBmb3JtIHZhcmlhYmxlcwogICAgICB0aGlzLmlucHV0MSA9ICcnOwogICAgICB0aGlzLmlucHV0MiA9ICcnOwogICAgICB0aGlzLmlucHV0MXN0YXRlID0gbnVsbDsKICAgICAgdGhpcy5pbnB1dDJzdGF0ZSA9IG51bGw7CiAgICAgIHRoaXMuaW5wdXQxUmV0dXJuID0gJyc7CiAgICAgIHRoaXMuaW5wdXQyUmV0dXJuID0gJyc7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["PopoverAdvance.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA,OAAA,SAAA,MAAA,8BAAA;AACA,SACA,QADA,EACA,OADA,EACA,UADA,EACA,UADA,EACA,KADA,EACA,SADA,QAEA,eAFA;AAGA,OAAA,MAAA,MAAA,sBAAA;AACA,SAAA,WAAA,QAAA,QAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,QAAA,EAAA,QAFA;AAGA,IAAA,OAAA,EAAA,OAHA;AAIA,IAAA,UAAA,EAAA,UAJA;AAKA,IAAA,SAAA,EAAA,SALA;AAMA,IAAA,UAAA,EAAA,UANA;AAOA,IAAA,KAAA,EAAA;AAPA,GADA;AAUA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GAVA;AAaA,EAAA,IAbA,kBAaA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA,IAFA;AAGA,MAAA,MAAA,EAAA,EAHA;AAIA,MAAA,WAAA,EAAA,IAJA;AAKA,MAAA,YAAA,EAAA,EALA;AAMA,MAAA,YAAA,EAAA,EANA;AAOA,MAAA,WAAA,EAAA,KAPA;AAQA,MAAA,WAAA,EAAA;AARA,KAAA;AAUA,GAxBA;AAyBA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,kBACA,GADA,EACA;AACA,UAAA,GAAA,EAAA;AACA,aAAA,WAAA,GAAA,IAAA;AACA;AACA,KALA;AAMA,IAAA,MANA,kBAMA,GANA,EAMA;AACA,UAAA,GAAA,EAAA;AACA,aAAA,WAAA,GAAA,IAAA;AACA;AACA;AAVA,GAzBA;AAqCA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,WAAA,WAAA,GAAA,KAAA;AACA,KAHA;AAIA,IAAA,IAJA,kBAIA;AACA,UAAA,CAAA,KAAA,MAAA,EAAA;AACA,aAAA,WAAA,GAAA,KAAA;AACA;;AACA,UAAA,CAAA,KAAA,MAAA,EAAA;AACA,aAAA,WAAA,GAAA,KAAA;AACA;;AACA,UAAA,KAAA,MAAA,IAAA,KAAA,MAAA,EAAA;AACA,aAAA,OAAA,GADA,CAEA;;AACA,aAAA,YAAA,GAAA,KAAA,MAAA;AACA,aAAA,YAAA,GAAA,KAAA,MAAA;AACA;AACA,KAjBA;AAkBA,IAAA,MAlBA,oBAkBA;AACA;AACA;AACA,WAAA,MAAA,GAAA,EAAA;AACA,WAAA,MAAA,GAAA,EAAA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,WAAA,YAAA,GAAA,EAAA;AACA,WAAA,YAAA,GAAA,EAAA;AACA;AA3BA;AArCA,CAAA","sourcesContent":["<template>\r\n  <b-card-code title=\"Advanced &lt;b-popover&gt; usage with reactive content\">\r\n    <b-card-text>\r\n      <span>You can even make your </span>\r\n      <code>&lt;b-popover&gt;</code>\r\n      <span> content interactive.</span>\r\n    </b-card-text>\r\n\r\n    <div id=\"my-container\">\r\n      <!-- Our triggering (target) element -->\r\n      <b-button\r\n        id=\"popover-reactive-1\"\r\n        ref=\"button\"\r\n        v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\r\n        variant=\"outline-primary\"\r\n      >\r\n        Reactive Content Using Slots\r\n      </b-button>\r\n\r\n      <!-- Output from the popover interaction -->\r\n      <b-card\r\n        v-if=\"input1Return && input2Return\"\r\n        title=\"Returned values:\"\r\n        class=\"shadow-none border mb-0 mt-2\"\r\n      >\r\n        <p class=\"card-text\">\r\n          Name: <strong>{{ input1Return }}</strong><br>\r\n          Password: <strong>{{ input2Return }}</strong>\r\n        </p>\r\n      </b-card>\r\n\r\n      <!-- Our popover title and content render container -->\r\n      <!-- We use placement 'auto' so popover fits in the best spot on viewport -->\r\n      <!-- We specify the same container as the trigger button, so that popover is close to button -->\r\n      <b-popover\r\n        ref=\"popover\"\r\n        target=\"popover-reactive-1\"\r\n        triggers=\"click\"\r\n        :show.sync=\"popoverShow\"\r\n        placement=\"auto\"\r\n        container=\"my-container\"\r\n      >\r\n        <template #title>\r\n          <div class=\"d-flex justify-content-between align-items-center\">\r\n            <span>Interactive Content</span>\r\n          </div>\r\n        </template>\r\n\r\n        <div>\r\n          <b-form-group\r\n            :state=\"input1state\"\r\n            invalid-feedback=\"This field is required\"\r\n          >\r\n            <b-form-input\r\n              v-model=\"input1\"\r\n              placeholder=\"Your Name\"\r\n              :state=\"input1state\"\r\n              size=\"sm\"\r\n            />\r\n          </b-form-group>\r\n\r\n          <b-form-group\r\n            :state=\"input2state\"\r\n            invalid-feedback=\"This field is required\"\r\n          >\r\n            <b-form-input\r\n              v-model=\"input2\"\r\n              type=\"password\"\r\n              placeholder=\"Your Password\"\r\n              :state=\"input2state\"\r\n              size=\"sm\"\r\n            />\r\n          </b-form-group>\r\n\r\n          <!-- button -->\r\n          <b-button\r\n            v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\r\n            size=\"sm\"\r\n            variant=\"danger\"\r\n            class=\"mr-1\"\r\n            @click=\"onClose\"\r\n          >\r\n            Cancel\r\n          </b-button>\r\n          <b-button\r\n            v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\r\n            size=\"sm\"\r\n            variant=\"primary\"\r\n            @click=\"onOk\"\r\n          >\r\n            Ok\r\n          </b-button>\r\n        </div>\r\n      </b-popover>\r\n    </div>\r\n\r\n    <template #code>\r\n      {{ codeAdvance }}\r\n    </template>\r\n  </b-card-code>\r\n</template>\r\n\r\n<script>\r\nimport BCardCode from '@core/components/b-card-code'\r\nimport {\r\n  BPopover, BButton, BFormGroup, BFormInput, BCard, BCardText,\r\n} from 'bootstrap-vue'\r\nimport Ripple from 'vue-ripple-directive'\r\nimport { codeAdvance } from './code'\r\n\r\nexport default {\r\n  components: {\r\n    BCardCode,\r\n    BPopover,\r\n    BButton,\r\n    BFormGroup,\r\n    BCardText,\r\n    BFormInput,\r\n    BCard,\r\n  },\r\n  directives: {\r\n    Ripple,\r\n  },\r\n  data() {\r\n    return {\r\n      input1: '',\r\n      input1state: null,\r\n      input2: '',\r\n      input2state: null,\r\n      input1Return: '',\r\n      input2Return: '',\r\n      popoverShow: false,\r\n      codeAdvance,\r\n    }\r\n  },\r\n  watch: {\r\n    input1(val) {\r\n      if (val) {\r\n        this.input1state = true\r\n      }\r\n    },\r\n    input2(val) {\r\n      if (val) {\r\n        this.input2state = true\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    onClose() {\r\n      this.popoverShow = false\r\n    },\r\n    onOk() {\r\n      if (!this.input1) {\r\n        this.input1state = false\r\n      }\r\n      if (!this.input2) {\r\n        this.input2state = false\r\n      }\r\n      if (this.input1 && this.input2) {\r\n        this.onClose()\r\n        // Return our popover form results\r\n        this.input1Return = this.input1\r\n        this.input2Return = this.input2\r\n      }\r\n    },\r\n    onShow() {\r\n      // This is called just before the popover is shown\r\n      // Reset our popover form variables\r\n      this.input1 = ''\r\n      this.input2 = ''\r\n      this.input1state = null\r\n      this.input2state = null\r\n      this.input1Return = ''\r\n      this.input2Return = ''\r\n    },\r\n  },\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/components/popover"}]}